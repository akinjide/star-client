{"version":3,"file":"js/995.3769072a.js","mappings":"oSAAO,SAASA,EAAsBC,GAU3B,IAV6B,gBACtCC,EAAe,iBACfC,EAAgB,MAChBC,EAAK,aACLC,GAMDJ,EACC,MAAMK,EAAgBC,EAAcF,EAAcF,GAC5CK,EAAiBC,EAAkBJ,EAAcD,EAAOD,GAExDO,EAAeH,EAAcF,EAAcH,GAC3CS,EAAwBC,EAAkBP,EAAcH,GAExDW,EAAkC,GAAfH,EAEzB,OAAIF,EAAiBG,EACZA,EAAwBE,EACtBL,EAAiBF,EAAgBK,EAAwBD,EAC3DC,EAAwBL,EAAgBI,EAAeG,EAGzDL,CACT,CAEO,SAASM,EAAuBC,GAQ5B,IAR8B,gBACvCb,EAAe,iBACfC,EAAgB,aAChBE,GAKDU,EACC,MAAMC,EAAsBT,EAAcF,EAAcF,GAClDc,EAAyBL,EAAkBP,EAAcH,GACzDgB,EAAqBX,EAAcF,EAAcH,GAEvD,OAAOe,EAA0BD,EAAsB,EAAME,EAAqB,CACpF,CAEO,SAASC,EAAed,EAAuBe,GACpD,MAAMC,EAAMhB,EAAe,cAAgB,eAC3C,OAAOe,IAAUC,IAAQ,CAC3B,CAEO,SAASC,EAAejB,EAAuBe,GACpD,MAAMC,EAAMhB,EAAe,cAAgB,eAC3C,OAAOe,IAAUC,IAAQ,CAC3B,CAEO,SAASZ,EAAmBJ,EAAuBkB,EAAcH,GACtE,IAAKA,EACH,OAAO,EAGT,MAAM,WACJI,EAAU,YACVC,EAAW,YACXC,GACEN,EAEJ,OAAIf,EACKkB,EACHG,EAAcD,EAAcD,EAC5BA,EAGCJ,EAAQO,SACjB,CAEO,SAASpB,EAAeF,EAAuBe,GACpD,MAAMC,EAAMhB,EAAe,cAAgB,eAC3C,OAAOe,IAAUC,IAAQ,CAC3B,CAEO,SAAST,EAAmBP,EAAuBe,GACxD,MAAMC,EAAMhB,EAAe,aAAe,YAC1C,OAAOe,IAAUC,IAAQ,CAC3B,C,sDC/CO,MAAMO,EAAgDC,OAAOC,IAAI,yBAe3DC,GAAuBC,EAAAA,EAAAA,GAAa,CAC/CC,aAAcC,QACdC,UAAW,CACTC,KAAMC,OACNC,QAAS,cAEXC,OAAQ,CACNH,KAAM,KACNE,QAASV,GAEXY,SAAU,CACRJ,KAAMK,EAAAA,GACNH,QAAS,SAEXI,SAAU,CACRN,KAAMK,EAAAA,GACNH,QAAS,SAEXK,WAAY,CACVP,KAAM,CAACF,QAASG,QAChBO,UAAYC,GACG,mBAANA,GAAmB,CACxB,SACA,UACA,UACAC,SAASD,QAIZE,EAAAA,EAAAA,SACAC,EAAAA,EAAAA,IAAiB,CAAEC,OAAQ,WAC3BC,EAAAA,EAAAA,SACAC,EAAAA,EAAAA,IAAe,CAChBC,cAAe,gCAEhB,eAEUC,GAAcC,EAAAA,EAAAA,KAAAA,CAMsB,CAC/CC,KAAM,cAENC,MAAOzB,IAEP0B,MAAO,CACL,oBAAsBC,IAAe,GAGvCC,KAAAA,CAAOH,EAAKvD,GAAa,IAAX,MAAE2D,GAAO3D,EACrB,MAAM,MAAEG,IAAUyD,EAAAA,EAAAA,OACZ,eAAEC,EAAc,OAAEb,IAAWc,EAAAA,EAAAA,IAAWP,GACxCQ,GAAQC,EAAAA,EAAAA,IAAST,EAAOA,EAAMjB,QAC9B2B,GAAgBC,EAAAA,EAAAA,KAAW,GAC3BC,GAAeD,EAAAA,EAAAA,IAAW,GAC1B7D,GAAgB6D,EAAAA,EAAAA,IAAW,GAC3BE,GAAcF,EAAAA,EAAAA,IAAW,GACzB9D,GAAeiE,EAAAA,EAAAA,KAAS,IAA0B,eAApBd,EAAMrB,aAElCoC,UAAWC,EAAcC,YAAaC,IAAkBC,EAAAA,EAAAA,MACxDJ,UAAWK,EAAU,YAAEH,IAAgBE,EAAAA,EAAAA,KAEzCE,GAAOC,EAAAA,EAAAA,MACPC,GAAcT,EAAAA,EAAAA,KAA+B,KAC1C,CACLU,UAAWR,EAAaS,GACxBC,SAAU,IACVC,OAAQ,mBAINC,GAAqBd,EAAAA,EAAAA,KAAS,IAC7BN,EAAMqB,SAAS3B,MAAM4B,OAEnBtB,EAAMuB,MAAM7B,MAAM8B,WAAUC,GAAQA,EAAKC,KAAO1B,EAAMqB,SAAS3B,MAAM,MAFlC,IAKtCiC,GAAoBrB,EAAAA,EAAAA,KAAS,IAC5BN,EAAMqB,SAAS3B,MAAM4B,OAEnBtB,EAAMuB,MAAM7B,MAAM8B,WAAUC,GAAQA,EAAKC,KAAO1B,EAAMqB,SAAS3B,MAAMM,EAAMqB,SAAS3B,MAAM4B,OAAS,MAFhE,IAK5C,GAAIM,EAAAA,GAAY,CACd,IAAIC,GAAS,GACbC,EAAAA,EAAAA,KAAM,IAAM,CAAC9B,EAAMqB,SAAS3B,MAAOgB,EAAchB,MAAOe,EAAYf,MAAOrD,EAAaqD,SAAQ,KAC9FqC,qBAAqBF,GACrBA,EAAQG,uBAAsB,KAC5B,GAAItB,EAAchB,OAASe,EAAYf,MAAO,CAC5C,MAAMuC,EAAe5F,EAAaqD,MAAQ,QAAU,SAEpDpD,EAAcoD,MAAQgB,EAAchB,MAAMuC,GAC1C5B,EAAYX,MAAQe,EAAYf,MAAMuC,GAEtC/B,EAAcR,MAAQpD,EAAcoD,MAAQ,EAAIW,EAAYX,KAC9D,CAEA,GAAI0B,EAAmB1B,OAAS,GAAKkB,EAAWK,GAAI,CAElD,MAAM/E,EAAkB0E,EAAWK,GAAGiB,SAASP,EAAkBjC,OAEjEyC,EAAiBjG,EAAiBsD,EAAMvB,aAC1C,IACA,GAEN,CAEA,MAAMmE,GAAYjC,EAAAA,EAAAA,KAAW,GAE7B,SAASgC,EAAkBD,EAAuBG,GAChD,IAAIC,EAAS,EAGXA,EADED,EACOvF,EAAwB,CAC/BX,iBAAkBqE,EAAaS,GAC/B5E,aAAcA,EAAaqD,MAC3BxD,gBAAiBgG,IAGVlG,EAAuB,CAC9BG,iBAAkBqE,EAAaS,GAC/B5E,aAAcA,EAAaqD,MAC3BtD,MAAOA,EAAMsD,MACbxD,gBAAiBgG,IAIrBK,EAAiBD,EACnB,CAEA,SAASC,EAAkBC,GACzB,IAAKZ,EAAAA,KAAepB,EAAaS,GAAI,OAErC,MAAMwB,EAAalG,EAAcF,EAAaqD,MAAOc,EAAaS,IAC5DzE,EAAiBC,EAAkBJ,EAAaqD,MAAOtD,EAAMsD,MAAOc,EAAaS,IACjFyB,EAAavF,EAAcd,EAAaqD,MAAOc,EAAaS,IAElE,KACEyB,GAAcD,GAEdE,KAAKC,IAAIJ,EAAchG,GAAkB,IAH3C,CAMA,GAAIH,EAAaqD,OAAStD,EAAMsD,OAASc,EAAaS,GAAI,CACxD,MAAM,YAAEvD,EAAaD,YAAaoF,GAAmBrC,EAAaS,GAElEuB,EAAe9E,EAAcmF,EAAkBL,CACjD,CAEInG,EAAaqD,MACfmB,EAAKiC,WAAWN,EAAazB,EAAYrB,OAEzCmB,EAAK2B,EAAazB,EAAYrB,MAXxB,CAaV,CAEA,SAASqD,EAAUC,GACjB,MAAM,UAAErF,EAAS,WAAEH,GAAewF,EAAEV,OAEpClC,EAAaV,MAAQrD,EAAaqD,MAAQlC,EAAaG,CACzD,CAEA,SAASsF,EAAWD,GAGlB,GAFAZ,EAAU1C,OAAQ,EAEbQ,EAAcR,OAAUkB,EAAWK,GAIxC,IAAK,MAAMA,KAAM+B,EAAEE,eACjB,IAAK,MAAMzB,KAAQb,EAAWK,GAAGiB,SAC/B,GAAIT,IAASR,EAEX,YADAkB,EAAiBV,EAKzB,CAEA,SAAS0B,EAAYH,GACnBZ,EAAU1C,OAAQ,CACpB,CAGA,IAAI0D,GAAmB,EACvB,SAASC,EAASL,GAEbI,GACAhB,EAAU1C,OACTsD,EAAEM,eAAiB1C,EAAWK,IAAIsC,SAASP,EAAEM,gBAC/CE,IAEFJ,GAAmB,CACrB,CAEA,SAASK,IACPL,GAAmB,CACrB,CAEA,SAASM,EAAWV,GAGlB,SAASW,EAASC,GAChBZ,EAAEa,iBACFL,EAAMI,EACR,CALKhD,EAAWK,KAOZ5E,EAAaqD,MACD,eAAVsD,EAAE3F,IACJsG,EAAQvH,EAAMsD,MAAQ,OAAS,QACZ,cAAVsD,EAAE3F,KACXsG,EAAQvH,EAAMsD,MAAQ,OAAS,QAGnB,cAAVsD,EAAE3F,IACJsG,EAAQ,QACW,YAAVX,EAAE3F,KACXsG,EAAQ,QAIE,SAAVX,EAAE3F,IACJsG,EAAQ,SACW,QAAVX,EAAE3F,KACXsG,EAAQ,QAEZ,CAEA,SAASH,EAAOI,GACd,IAAKhD,EAAWK,GAAI,OAEpB,IAAIA,EAEJ,GAAK2C,EAGE,GAAiB,SAAbA,GAGT,GAFA3C,EAAKL,EAAWK,GAAG6C,cAAc,WAAWC,oBAEvC9C,EAAI,OAAOuC,EAAM,cACjB,GAAiB,SAAbI,GAGT,GAFA3C,EAAKL,EAAWK,GAAG6C,cAAc,WAAWE,wBAEvC/C,EAAI,OAAOuC,EAAM,YACA,UAAbI,EACT3C,EAAML,EAAWK,GAAGgD,kBACE,SAAbL,IACT3C,EAAML,EAAWK,GAAGiD,sBAdP,CACb,MAAMC,GAAYC,EAAAA,EAAAA,IAAkBxD,EAAWK,IAC/CA,EAAKkD,EAAU,EACjB,CAcIlD,GACFA,EAAGuC,MAAM,CAAEa,eAAe,GAE9B,CAEA,SAASC,EAAUV,GACjB,MAAMzF,EAAY9B,EAAaqD,OAAStD,EAAMsD,OAAS,EAAI,EAErD6E,GAA2B,SAAbX,GAAuBzF,EAAYA,GAAa7B,EAAcoD,MAElF,IAAI8C,EAAcpC,EAAaV,MAAQ6E,EAGvC,GAAIlI,EAAaqD,OAAStD,EAAMsD,OAASc,EAAaS,GAAI,CACxD,MAAM,YAAEvD,EAAaD,YAAaoF,GAAmBrC,EAAaS,GAElEuB,GAAe9E,EAAcmF,CAC/B,CAEAN,EAAiBC,EACnB,CAEA,MAAMgC,GAAYlE,EAAAA,EAAAA,KAAS,KAAM,CAC/BmE,KAAMzE,EAAMyE,KACZC,KAAM1E,EAAM0E,KACZC,OAAQ3E,EAAM2E,OACdC,WAAY5E,EAAM4E,eAGdC,GAAavE,EAAAA,EAAAA,KAAS,KAC1B,OAAQd,EAAMb,YAEZ,IAAK,SAAU,OAAO,EAGtB,IAAK,UAAW,OAAQM,EAAOS,MAI/B,KAAK,EAAM,OAAOQ,EAAcR,OAASiD,KAAKC,IAAIxC,EAAaV,OAAS,EAGxE,IAAK,SAAU,OACbT,EAAOS,OACNQ,EAAcR,OAASiD,KAAKC,IAAIxC,EAAaV,OAAS,EAMzD,QAAS,OACNT,EAAOS,QACPQ,EAAcR,OAASiD,KAAKC,IAAIxC,EAAaV,OAAS,GAE3D,IAGIoF,GAAUxE,EAAAA,EAAAA,KAAS,IAEhBqC,KAAKC,IAAIxC,EAAaV,OAAS,IAGlCqF,GAAUzE,EAAAA,EAAAA,KAAS,KACvB,IAAKE,EAAad,MAAO,OAAO,EAEhC,MAAMgD,EAAavF,EAAcd,EAAaqD,MAAOc,EAAaS,IAC5D+D,EAAa1H,EAAcjB,EAAaqD,MAAOc,EAAaS,IAE5DgE,EAAgBvC,EAAasC,EAGnC,OAAOC,EAAgBtC,KAAKC,IAAIxC,EAAaV,OAAS,CAAC,IA0EzD,OAvEAwF,EAAAA,EAAAA,IAAU,KAAAC,EAAAA,EAAAA,IAAA3F,EAAA4F,IAAA,OAEC,CACL,gBACA,CACE,2BAA4B/I,EAAaqD,MACzC,6BAA8BmF,EAAWnF,MACzC,gCAAiCQ,EAAcR,OAEjDI,EAAeJ,MACfF,EAAM6F,OACP,MACO7F,EAAM8F,MAAK,SACPlD,EAAU1C,OAASM,EAAMqB,SAAS3B,MAAM4B,QAAW,EAAI,EAAC,QAC1D+B,GAAO,CAAA/E,QAAAA,IAAA,CAEfuG,EAAWnF,QAAKyF,EAAAA,EAAAA,IAAA,wBAGP,CACL,sBACA,CAAE,iCAAkCL,EAAQpF,QAC7C,YACa+D,EAAc,QAClB8B,IAAMT,EAAQpF,OAAS4E,EAAS,SAAO,CAE/C1E,EAAM8E,OAAOF,EAAU9E,SAAMyF,EAAAA,EAAAA,IAAAK,EAAAA,GAAA,MAAAlH,QAAAA,IAAA,EAAA6G,EAAAA,EAAAA,IAAAM,EAAAA,EAAA,MAEbrJ,EAAMsD,MAAQF,EAAMhB,SAAWgB,EAAMd,UAAQ,YAIlEyG,EAAAA,EAAAA,IAAA,2BAIO3E,EAAY,0CAEPuC,GAAQ,EAAAoC,EAAAA,EAAAA,IAAA,WAGXvE,EAAU,yCAEJqC,EAAS,WACRE,EAAU,UACXO,GAAS,CAEnB9D,EAAMtB,UAAUkG,EAAU9E,WAI9BmF,EAAWnF,QAAKyF,EAAAA,EAAAA,IAAA,wBAGP,CACL,sBACA,CAAE,iCAAkCJ,EAAQrF,QAC7C,YACa+D,EAAc,QAClB8B,IAAMR,EAAQrF,OAAS4E,EAAS,SAAO,CAE/C1E,EAAM6E,OAAOD,EAAU9E,SAAMyF,EAAAA,EAAAA,IAAAK,EAAAA,GAAA,MAAAlH,QAAAA,IAAA,EAAA6G,EAAAA,EAAAA,IAAAM,EAAAA,EAAA,MAEbrJ,EAAMsD,MAAQF,EAAMd,SAAWc,EAAMhB,UAAQ,gBAQhE,CACL6C,SAAUrB,EAAMqB,SAChBiD,WACAlE,eACAoD,QACAsB,UACAC,UAEJ,I,kCClbK,MAAMW,EAAmB7H,OAAOC,IAAI,wBAE9B6H,GAAsB3H,EAAAA,EAAAA,GAAa,CAC9C4H,OAAQ1H,QACR2H,OAAQ3H,QACR4H,gBAAiB,CACf1H,KAAM2H,SACNzH,QAAS0H,EAAAA,OAGRjI,QACAgB,EAAAA,EAAAA,SACAI,EAAAA,EAAAA,IAAe,CAAEC,cAAe,yBAChCF,EAAAA,EAAAA,SACA+G,EAAAA,EAAAA,UACAC,EAAAA,EAAAA,IAAiB,CAAEC,QAAS,WAC9B,eAYuB7G,EAAAA,EAAAA,KAAAA,CAMuB,CAC/CC,KAAM,aAENC,MAAOmG,IAEPlG,MAAO,CACL,oBAAsBC,IAAe,GAGvCC,KAAAA,CAAOH,EAAKvD,GAAa,IAAX,MAAE2D,GAAO3D,EACrB,MAAM,aAAEmK,IAAiBC,EAAAA,EAAAA,IAAa7G,IAChC,WAAEoF,EAAU,OAAED,EAAM,KAAEF,EAAI,KAAEC,EAAI,SAAErD,IAAapB,EAAAA,EAAAA,IAAST,EAAOkG,GAsCrE,OApCAY,EAAAA,EAAAA,IAAgB,CACdC,MAAO,CACLC,OAAOC,EAAAA,EAAAA,IAAMjH,EAAO,SACpBkH,UAAUD,EAAAA,EAAAA,IAAMjH,EAAO,YACvBqG,QAAQY,EAAAA,EAAAA,IAAMjH,EAAO,UACrB2G,SAASM,EAAAA,EAAAA,IAAMjH,EAAO,eAI1B0F,EAAAA,EAAAA,IAAU,KACR,MAAMyB,EAAkBtH,EAAYuH,YAAYpH,GAEhD,OAAA2F,EAAAA,EAAAA,IAAA9F,GAAAwH,EAAAA,EAAAA,IAESF,EAAe,OACb,CACL,eACA,CACE,uBAAwBnH,EAAMoG,QAEhCQ,EAAa1G,MACbF,EAAM6F,OACP,MACO7F,EAAM8F,QAAK,CAAAhH,QAAAA,IAAA,CAEjBsB,EAAMtB,UAAU,CAChBsG,aACAD,SACAF,OACAC,OACArD,SAAUA,EAAS3B,UACnB,IAKD,CAAC,CACV,I,6FCpDK,MAAMoH,GAAiB9I,EAAAA,EAAAA,GAAa,CACzC+I,YAAa1I,OACb2I,aAAc3I,OACd4I,WAAYxI,EAAAA,GACZyI,SAAUhJ,QACViJ,UAAW,CACT/I,KAAMK,EAAAA,GACNH,QAAS,WAEX8I,WAAY,CACVhJ,KAAMC,OACNC,QAAS,kBAEX+I,UAAWnJ,QACX2H,OAAQ3H,QACRoJ,WAAY,CACVlJ,KAAMC,OACNC,QAAS,aAEXiJ,MAAOrJ,QACPsJ,KAAM,CACJpJ,KAAMF,QACNI,aAASmJ,GAEXC,KAAMxJ,QACNyJ,cAAetJ,OACfuJ,YAAanJ,EAAAA,GACboJ,OAAQ,CACNzJ,KAAM,CAACF,QAAS4J,QAChBxJ,SAAS,GAEXyJ,KAAM1J,OACN2J,WAAY,CACV5J,KAAMF,QACNI,SAAS,GAGXiH,SAAS0C,EAAAA,EAAAA,MACTC,aAAaD,EAAAA,EAAAA,UAEVE,EAAAA,EAAAA,SACApJ,EAAAA,EAAAA,SACAqJ,EAAAA,EAAAA,SACAC,EAAAA,EAAAA,SACAC,EAAAA,EAAAA,UACAC,EAAAA,EAAAA,SACAC,EAAAA,EAAAA,UACAC,EAAAA,EAAAA,SACAvJ,EAAAA,EAAAA,GAAa,CAAEkG,IAAK,aACpBa,EAAAA,EAAAA,UACAC,EAAAA,EAAAA,IAAiB,CAAEC,QAAS,WAC9B,SAEUI,GAAQjH,EAAAA,EAAAA,KAAAA,CAA+B,CAClDC,KAAM,QAENmJ,WAAY,CAAEC,OAAMA,EAAAA,GAEpBnJ,MAAOsH,IAEPrH,MAAO,CACL,cAAgBuD,IAAkB,EAClC,oBAAsBtD,IAAmB,EACzC,iBAAmBkJ,IAA4B,EAC/CC,MAAQ7F,IAAkC,GAG5CrD,KAAAA,CAAOH,EAAKvD,GAA0B,IAAxB,MAAE6M,EAAK,KAAEC,EAAI,MAAEnJ,GAAO3D,EAClC,MAAM,EAAE+M,IAAMC,EAAAA,EAAAA,OACR,cAAEC,IAAkBC,EAAAA,EAAAA,GAAU3J,IAC9B,aAAE4J,EAAY,YAAEC,EAAW,eAAEC,IAAmBC,EAAAA,EAAAA,IAAW/J,IAC3D,eAAEgK,IAAmBC,EAAAA,EAAAA,GAAWjK,IAChC,iBAAEkK,IAAqBC,EAAAA,EAAAA,GAAanK,IACpC,eAAEoK,IAAmBC,EAAAA,EAAAA,GAAWrK,IAChC,YAAEsK,IAAgBC,EAAAA,EAAAA,GAAQvK,IAC1B,aAAE4G,IAAiBC,EAAAA,EAAAA,IAAa7G,GAEhCwK,GAAWC,EAAAA,EAAAA,GAAgBzK,EAAO,cAClCQ,GAAQkK,EAAAA,EAAAA,IAAa1K,EAAOkG,GAAkB,GAC9C8B,GAAO2C,EAAAA,EAAAA,IAAQ3K,EAAOsJ,GACtBsB,GAAS9J,EAAAA,EAAAA,KAAS,KAAqB,IAAfd,EAAMgI,MAAkBA,EAAK4C,OAAO1K,QAC5D2K,GAAc/J,EAAAA,EAAAA,KAAS,KAC1Bd,EAAMkH,WACQ,IAAflH,EAAMgI,SACHxH,GAASR,EAAMgI,MAAQA,EAAK6C,YAAY3K,SAEvC4K,GAAahK,EAAAA,EAAAA,KAAS,KAAM,CAChC,aAAc0I,EAAExJ,EAAM4H,YACtB7B,OAAAA,CAASvC,GACPA,EAAEa,iBACFb,EAAEuH,kBAEFP,EAAStK,OAAQ,EAEjBqJ,EAAK,cAAe/F,EACtB,MAGF,SAASuC,EAASvC,GAChB+F,EAAK,QAAS/F,GAETqH,EAAY3K,QAEjB8H,EAAKgD,WAAWxH,GAChBhD,GAAOyK,SACT,CAEA,SAASC,EAAW1H,GACJ,UAAVA,EAAE3F,KAA6B,MAAV2F,EAAE3F,MACzB2F,EAAEa,iBACF0B,EAAQvC,GAEZ,CAEA,MAAO,KACL,MAAM2H,EAAOnD,EAAK4C,OAAO1K,MAAS,IAAMF,EAAM4F,IACxCwF,KAAoBpL,EAAMyH,aAAczH,EAAMwH,cAC9C6D,KAAeD,IAAkBhL,EAAMkL,QACvCC,KAAcnL,EAAMoL,QAASxL,EAAM0H,UACnC+D,KAAerL,EAAMiG,SAAUrG,EAAMqG,SAAW7F,EAChDkL,KAAqB1L,EAAMoI,cAAepI,EAAMmI,eAChDwD,KAAgBD,IAAmBtL,EAAMwL,SACzCC,GAAYrL,GAASA,EAAM4E,WAAWlF,MAE5C,OAAOsK,EAAStK,QAAK4L,EAAAA,EAAAA,KAAAnG,EAAAA,EAAAA,IAAAwF,GAAA9D,EAAAA,EAAAA,IAAA,OAEV,CACL,SACA,CACE,mBAAoBrH,EAAMkH,SAC1B,gBAAiBlH,EAAM+H,MACvB,eAAgB8C,EAAY3K,MAC5B,iBAAkBuL,EAClB,eAAgBzL,EAAMkI,MAExBtB,EAAa1G,MACbwJ,EAAcxJ,MACd2L,EAAWjC,EAAa1J,WAAQ+H,EAChC+B,EAAe9J,MACfgK,EAAiBhK,MACjBkK,EAAelK,MACfoK,EAAYpK,MACZ4J,EAAe5J,MACfM,GAAOZ,cAAcM,MACrBF,EAAM6F,OACP,MACM,CACLgG,EAAWhC,EAAY3J,WAAQ+H,EAC/BjI,EAAM8F,OACP,SACU9F,EAAMkH,eAAYe,EAAS,UAC1BjI,EAAM6H,UAAS,SAChBgD,EAAY3K,MAAQ,OAAI+H,EAAS,QAClClC,EAAO,UACL8E,EAAY3K,QAAU0K,EAAO1K,OAASgL,GAE7ClD,EAAK+D,WAAS,CAAAjN,QAAAA,IAAA,EAEjBkN,EAAAA,EAAAA,IAAYnB,EAAY3K,MAAO,UAE/BuL,IAAS9F,EAAAA,EAAAA,IAAAsG,EAAAA,GAAA,gBAAAnN,QAAAA,IAAA,EAAAgN,EAAAA,EAAAA,KAAAnG,EAAAA,EAAAA,IAAA,gCAMFvF,EAAMiG,QAGkBV,EAAAA,EAAAA,IAAAuG,EAAAA,EAAA,iCAKXlM,EAAM8H,WAAU,SAClB,CACR7B,MAAO,CAAEkG,KAAMnM,EAAM8H,cAEL1H,EAAMiG,SAZbV,EAAAA,EAAAA,IAAAM,EAAAA,EAAA,wBAGJjG,EAAM8H,YAAU,QAW1B,EAAAsE,EAAAA,GAhBQ5L,EAAM4E,WAAWlF,YAqB9ByL,IAAUhG,EAAAA,EAAAA,IAAA,+CAELvF,EAAMwL,SAgBJjG,EAAAA,EAAAA,IAAAuG,EAAAA,EAAA,kCAKWR,EAAe,SACjB,CACRW,QAAS,CACPC,MAAOtM,EAAMmI,cACboE,OAAO,GAETtG,MAAO,CACLkG,KAAMnM,EAAMoI,YACZmE,OAAO,KAGOnM,EAAMwL,UAhCZjG,EAAAA,EAAAA,IAAA6G,EAAAA,GAAA,MAEVxM,EAAMoI,cAAWzC,EAAAA,EAAAA,IAAAM,EAAAA,EAAA,yBAGRjG,EAAMoI,YAAW,gBAK1BpI,EAAMmI,gBAAaxC,EAAAA,EAAAA,IAAA0G,EAAAA,EAAA,4BAGTrM,EAAMmI,cAAa,qBAuBtCxC,EAAAA,EAAAA,IAAA,wDAGGvF,EAAMtB,UAAU,CAChBsG,WAAY5E,GAAO4E,WAAWlF,MAC9BN,cAAeY,GAAOZ,cAAcM,MACpCiF,OAAQ3E,GAAO2E,OACf8F,OAAQzK,GAAOyK,OACf/K,MAAOM,GAAON,MAAMA,MACpBgH,SAAUlH,EAAMkH,YACZlH,EAAMuI,OAGZ8C,IAAS1F,EAAAA,EAAAA,IAAA,6CAEJvF,EAAMkL,QAgBJ3F,EAAAA,EAAAA,IAAAuG,EAAAA,EAAA,iCAKWd,EAAc,SAChB,CACRiB,QAAS,CACPI,KAAK,EACLH,MAAOtM,EAAMwH,cAEfvB,MAAO,CACLwG,KAAK,EACLN,KAAMnM,EAAMyH,cAGErH,EAAMkL,SAhCb3F,EAAAA,EAAAA,IAAA6G,EAAAA,GAAA,MAETxM,EAAMyH,aAAU9B,EAAAA,EAAAA,IAAAM,EAAAA,EAAA,+BAIPjG,EAAMyH,YAAU,MAIzBzH,EAAMwH,eAAY7B,EAAAA,EAAAA,IAAA0G,EAAAA,EAAA,kCAIRrM,EAAMwH,cAAY,UAwBpC+D,IAAQ5F,EAAAA,EAAAA,IAAA,UAAA0B,EAAAA,EAAAA,IAAA,kDAKDyD,EAAW5K,OAAK,CAElBE,EAAMoL,OAGiB7F,EAAAA,EAAAA,IAAAuG,EAAAA,EAAA,+BAMZ,CACRjG,MAAO,CACLkG,KAAMnM,EAAM2H,UACZ+E,KAAM,aAGQtM,EAAMoL,QAfd7F,EAAAA,EAAAA,IAAAM,EAAAA,EAAA,uBAGHjG,EAAM2H,UAAS,2BAgB7B,GAAAgF,EAAAA,EAAAA,IAAA,UAnJU9B,EAAY3K,OAASF,EAAMqI,OAAQ,OAqJjD,CAEL,G","sources":["webpack://star-client/../../../src/components/VSlideGroup/helpers.ts","webpack://star-client/../../../src/components/VSlideGroup/VSlideGroup.tsx","webpack://star-client/../../../src/components/VChipGroup/VChipGroup.tsx","webpack://star-client/../../../src/components/VChip/VChip.tsx"],"sourcesContent":["export function calculateUpdatedTarget ({\n  selectedElement,\n  containerElement,\n  isRtl,\n  isHorizontal,\n}: {\n  selectedElement: HTMLElement\n  containerElement: HTMLElement\n  isRtl: boolean\n  isHorizontal: boolean\n}): number {\n  const containerSize = getOffsetSize(isHorizontal, containerElement)\n  const scrollPosition = getScrollPosition(isHorizontal, isRtl, containerElement)\n\n  const childrenSize = getOffsetSize(isHorizontal, selectedElement)\n  const childrenStartPosition = getOffsetPosition(isHorizontal, selectedElement)\n\n  const additionalOffset = childrenSize * 0.4\n\n  if (scrollPosition > childrenStartPosition) {\n    return childrenStartPosition - additionalOffset\n  } else if (scrollPosition + containerSize < childrenStartPosition + childrenSize) {\n    return childrenStartPosition - containerSize + childrenSize + additionalOffset\n  }\n\n  return scrollPosition\n}\n\nexport function calculateCenteredTarget ({\n  selectedElement,\n  containerElement,\n  isHorizontal,\n}: {\n  selectedElement: HTMLElement\n  containerElement: HTMLElement\n  isHorizontal: boolean\n}): number {\n  const containerOffsetSize = getOffsetSize(isHorizontal, containerElement)\n  const childrenOffsetPosition = getOffsetPosition(isHorizontal, selectedElement)\n  const childrenOffsetSize = getOffsetSize(isHorizontal, selectedElement)\n\n  return childrenOffsetPosition - (containerOffsetSize / 2) + (childrenOffsetSize / 2)\n}\n\nexport function getScrollSize (isHorizontal: boolean, element?: HTMLElement) {\n  const key = isHorizontal ? 'scrollWidth' : 'scrollHeight'\n  return element?.[key] || 0\n}\n\nexport function getClientSize (isHorizontal: boolean, element?: HTMLElement) {\n  const key = isHorizontal ? 'clientWidth' : 'clientHeight'\n  return element?.[key] || 0\n}\n\nexport function getScrollPosition (isHorizontal: boolean, rtl: boolean, element?: HTMLElement) {\n  if (!element) {\n    return 0\n  }\n\n  const {\n    scrollLeft,\n    offsetWidth,\n    scrollWidth,\n  } = element\n\n  if (isHorizontal) {\n    return rtl\n      ? scrollWidth - offsetWidth + scrollLeft\n      : scrollLeft\n  }\n\n  return element.scrollTop\n}\n\nexport function getOffsetSize (isHorizontal: boolean, element?: HTMLElement) {\n  const key = isHorizontal ? 'offsetWidth' : 'offsetHeight'\n  return element?.[key] || 0\n}\n\nexport function getOffsetPosition (isHorizontal: boolean, element?: HTMLElement) {\n  const key = isHorizontal ? 'offsetLeft' : 'offsetTop'\n  return element?.[key] || 0\n}\n","// Styles\nimport './VSlideGroup.sass'\n\n// Components\nimport { VFadeTransition } from '@/components/transitions'\nimport { VIcon } from '@/components/VIcon'\n\n// Composables\nimport { makeComponentProps } from '@/composables/component'\nimport { makeDisplayProps, useDisplay } from '@/composables/display'\nimport { useGoTo } from '@/composables/goto'\nimport { makeGroupProps, useGroup } from '@/composables/group'\nimport { IconValue } from '@/composables/icons'\nimport { useRtl } from '@/composables/locale'\nimport { useResizeObserver } from '@/composables/resizeObserver'\nimport { makeTagProps } from '@/composables/tag'\n\n// Utilities\nimport { computed, shallowRef, watch } from 'vue'\nimport {\n  calculateCenteredTarget,\n  calculateUpdatedTarget,\n  getClientSize,\n  getOffsetSize,\n  getScrollPosition,\n  getScrollSize,\n} from './helpers'\nimport { focusableChildren, genericComponent, IN_BROWSER, propsFactory, useRender } from '@/util'\n\n// Types\nimport type { InjectionKey, PropType } from 'vue'\nimport type { GoToOptions } from '@/composables/goto'\nimport type { GroupProvide } from '@/composables/group'\nimport type { GenericProps } from '@/util'\n\nexport const VSlideGroupSymbol: InjectionKey<GroupProvide> = Symbol.for('vuetify:v-slide-group')\n\ninterface SlideGroupSlot {\n  next: GroupProvide['next']\n  prev: GroupProvide['prev']\n  select: GroupProvide['select']\n  isSelected: GroupProvide['isSelected']\n}\n\ntype VSlideGroupSlots = {\n  default: SlideGroupSlot\n  prev: SlideGroupSlot\n  next: SlideGroupSlot\n}\n\nexport const makeVSlideGroupProps = propsFactory({\n  centerActive: Boolean,\n  direction: {\n    type: String as PropType<'horizontal' | 'vertical'>,\n    default: 'horizontal',\n  },\n  symbol: {\n    type: null,\n    default: VSlideGroupSymbol,\n  },\n  nextIcon: {\n    type: IconValue,\n    default: '$next',\n  },\n  prevIcon: {\n    type: IconValue,\n    default: '$prev',\n  },\n  showArrows: {\n    type: [Boolean, String],\n    validator: (v: any) => (\n      typeof v === 'boolean' || [\n        'always',\n        'desktop',\n        'mobile',\n      ].includes(v)\n    ),\n  },\n\n  ...makeComponentProps(),\n  ...makeDisplayProps({ mobile: null }),\n  ...makeTagProps(),\n  ...makeGroupProps({\n    selectedClass: 'v-slide-group-item--active',\n  }),\n}, 'VSlideGroup')\n\nexport const VSlideGroup = genericComponent<new <T>(\n  props: {\n    modelValue?: T\n    'onUpdate:modelValue'?: (value: T) => void\n  },\n  slots: VSlideGroupSlots,\n) => GenericProps<typeof props, typeof slots>>()({\n  name: 'VSlideGroup',\n\n  props: makeVSlideGroupProps(),\n\n  emits: {\n    'update:modelValue': (value: any) => true,\n  },\n\n  setup (props, { slots }) {\n    const { isRtl } = useRtl()\n    const { displayClasses, mobile } = useDisplay(props)\n    const group = useGroup(props, props.symbol)\n    const isOverflowing = shallowRef(false)\n    const scrollOffset = shallowRef(0)\n    const containerSize = shallowRef(0)\n    const contentSize = shallowRef(0)\n    const isHorizontal = computed(() => props.direction === 'horizontal')\n\n    const { resizeRef: containerRef, contentRect: containerRect } = useResizeObserver()\n    const { resizeRef: contentRef, contentRect } = useResizeObserver()\n\n    const goTo = useGoTo()\n    const goToOptions = computed<Partial<GoToOptions>>(() => {\n      return {\n        container: containerRef.el,\n        duration: 200,\n        easing: 'easeOutQuart',\n      }\n    })\n\n    const firstSelectedIndex = computed(() => {\n      if (!group.selected.value.length) return -1\n\n      return group.items.value.findIndex(item => item.id === group.selected.value[0])\n    })\n\n    const lastSelectedIndex = computed(() => {\n      if (!group.selected.value.length) return -1\n\n      return group.items.value.findIndex(item => item.id === group.selected.value[group.selected.value.length - 1])\n    })\n\n    if (IN_BROWSER) {\n      let frame = -1\n      watch(() => [group.selected.value, containerRect.value, contentRect.value, isHorizontal.value], () => {\n        cancelAnimationFrame(frame)\n        frame = requestAnimationFrame(() => {\n          if (containerRect.value && contentRect.value) {\n            const sizeProperty = isHorizontal.value ? 'width' : 'height'\n\n            containerSize.value = containerRect.value[sizeProperty]\n            contentSize.value = contentRect.value[sizeProperty]\n\n            isOverflowing.value = containerSize.value + 1 < contentSize.value\n          }\n\n          if (firstSelectedIndex.value >= 0 && contentRef.el) {\n            // TODO: Is this too naive? Should we store element references in group composable?\n            const selectedElement = contentRef.el.children[lastSelectedIndex.value] as HTMLElement\n\n            scrollToChildren(selectedElement, props.centerActive)\n          }\n        })\n      })\n    }\n\n    const isFocused = shallowRef(false)\n\n    function scrollToChildren (children: HTMLElement, center?: boolean) {\n      let target = 0\n\n      if (center) {\n        target = calculateCenteredTarget({\n          containerElement: containerRef.el!,\n          isHorizontal: isHorizontal.value,\n          selectedElement: children,\n        })\n      } else {\n        target = calculateUpdatedTarget({\n          containerElement: containerRef.el!,\n          isHorizontal: isHorizontal.value,\n          isRtl: isRtl.value,\n          selectedElement: children,\n        })\n      }\n\n      scrollToPosition(target)\n    }\n\n    function scrollToPosition (newPosition: number) {\n      if (!IN_BROWSER || !containerRef.el) return\n\n      const offsetSize = getOffsetSize(isHorizontal.value, containerRef.el)\n      const scrollPosition = getScrollPosition(isHorizontal.value, isRtl.value, containerRef.el)\n      const scrollSize = getScrollSize(isHorizontal.value, containerRef.el)\n\n      if (\n        scrollSize <= offsetSize ||\n        // Prevent scrolling by only a couple of pixels, which doesn't look smooth\n        Math.abs(newPosition - scrollPosition) < 16\n      ) return\n\n      if (isHorizontal.value && isRtl.value && containerRef.el) {\n        const { scrollWidth, offsetWidth: containerWidth } = containerRef.el!\n\n        newPosition = (scrollWidth - containerWidth) - newPosition\n      }\n\n      if (isHorizontal.value) {\n        goTo.horizontal(newPosition, goToOptions.value)\n      } else {\n        goTo(newPosition, goToOptions.value)\n      }\n    }\n\n    function onScroll (e: Event) {\n      const { scrollTop, scrollLeft } = e.target as HTMLElement\n\n      scrollOffset.value = isHorizontal.value ? scrollLeft : scrollTop\n    }\n\n    function onFocusin (e: FocusEvent) {\n      isFocused.value = true\n\n      if (!isOverflowing.value || !contentRef.el) return\n\n      // Focused element is likely to be the root of an item, so a\n      // breadth-first search will probably find it in the first iteration\n      for (const el of e.composedPath()) {\n        for (const item of contentRef.el.children) {\n          if (item === el) {\n            scrollToChildren(item as HTMLElement)\n            return\n          }\n        }\n      }\n    }\n\n    function onFocusout (e: FocusEvent) {\n      isFocused.value = false\n    }\n\n    // Affix clicks produce onFocus that we have to ignore to avoid extra scrollToChildren\n    let ignoreFocusEvent = false\n    function onFocus (e: FocusEvent) {\n      if (\n        !ignoreFocusEvent &&\n        !isFocused.value &&\n        !(e.relatedTarget && contentRef.el?.contains(e.relatedTarget as Node))\n      ) focus()\n\n      ignoreFocusEvent = false\n    }\n\n    function onFocusAffixes () {\n      ignoreFocusEvent = true\n    }\n\n    function onKeydown (e: KeyboardEvent) {\n      if (!contentRef.el) return\n\n      function toFocus (location: Parameters<typeof focus>[0]) {\n        e.preventDefault()\n        focus(location)\n      }\n\n      if (isHorizontal.value) {\n        if (e.key === 'ArrowRight') {\n          toFocus(isRtl.value ? 'prev' : 'next')\n        } else if (e.key === 'ArrowLeft') {\n          toFocus(isRtl.value ? 'next' : 'prev')\n        }\n      } else {\n        if (e.key === 'ArrowDown') {\n          toFocus('next')\n        } else if (e.key === 'ArrowUp') {\n          toFocus('prev')\n        }\n      }\n\n      if (e.key === 'Home') {\n        toFocus('first')\n      } else if (e.key === 'End') {\n        toFocus('last')\n      }\n    }\n\n    function focus (location?: 'next' | 'prev' | 'first' | 'last') {\n      if (!contentRef.el) return\n\n      let el: HTMLElement | undefined\n\n      if (!location) {\n        const focusable = focusableChildren(contentRef.el)\n        el = focusable[0]\n      } else if (location === 'next') {\n        el = contentRef.el.querySelector(':focus')?.nextElementSibling as HTMLElement | undefined\n\n        if (!el) return focus('first')\n      } else if (location === 'prev') {\n        el = contentRef.el.querySelector(':focus')?.previousElementSibling as HTMLElement | undefined\n\n        if (!el) return focus('last')\n      } else if (location === 'first') {\n        el = (contentRef.el.firstElementChild as HTMLElement)\n      } else if (location === 'last') {\n        el = (contentRef.el.lastElementChild as HTMLElement)\n      }\n\n      if (el) {\n        el.focus({ preventScroll: true })\n      }\n    }\n\n    function scrollTo (location: 'prev' | 'next') {\n      const direction = isHorizontal.value && isRtl.value ? -1 : 1\n\n      const offsetStep = (location === 'prev' ? -direction : direction) * containerSize.value\n\n      let newPosition = scrollOffset.value + offsetStep\n\n      // TODO: improve it\n      if (isHorizontal.value && isRtl.value && containerRef.el) {\n        const { scrollWidth, offsetWidth: containerWidth } = containerRef.el!\n\n        newPosition += scrollWidth - containerWidth\n      }\n\n      scrollToPosition(newPosition)\n    }\n\n    const slotProps = computed(() => ({\n      next: group.next,\n      prev: group.prev,\n      select: group.select,\n      isSelected: group.isSelected,\n    }))\n\n    const hasAffixes = computed(() => {\n      switch (props.showArrows) {\n        // Always show arrows on desktop & mobile\n        case 'always': return true\n\n        // Always show arrows on desktop\n        case 'desktop': return !mobile.value\n\n        // Show arrows on mobile when overflowing.\n        // This matches the default 2.2 behavior\n        case true: return isOverflowing.value || Math.abs(scrollOffset.value) > 0\n\n        // Always show on mobile\n        case 'mobile': return (\n          mobile.value ||\n          (isOverflowing.value || Math.abs(scrollOffset.value) > 0)\n        )\n\n        // https://material.io/components/tabs#scrollable-tabs\n        // Always show arrows when\n        // overflowed on desktop\n        default: return (\n          !mobile.value &&\n          (isOverflowing.value || Math.abs(scrollOffset.value) > 0)\n        )\n      }\n    })\n\n    const hasPrev = computed(() => {\n      // 1 pixel in reserve, may be lost after rounding\n      return Math.abs(scrollOffset.value) > 1\n    })\n\n    const hasNext = computed(() => {\n      if (!containerRef.value) return false\n\n      const scrollSize = getScrollSize(isHorizontal.value, containerRef.el)\n      const clientSize = getClientSize(isHorizontal.value, containerRef.el)\n\n      const scrollSizeMax = scrollSize - clientSize\n\n      // 1 pixel in reserve, may be lost after rounding\n      return scrollSizeMax - Math.abs(scrollOffset.value) > 1\n    })\n\n    useRender(() => (\n      <props.tag\n        class={[\n          'v-slide-group',\n          {\n            'v-slide-group--vertical': !isHorizontal.value,\n            'v-slide-group--has-affixes': hasAffixes.value,\n            'v-slide-group--is-overflowing': isOverflowing.value,\n          },\n          displayClasses.value,\n          props.class,\n        ]}\n        style={ props.style }\n        tabindex={ (isFocused.value || group.selected.value.length) ? -1 : 0 }\n        onFocus={ onFocus }\n      >\n        { hasAffixes.value && (\n          <div\n            key=\"prev\"\n            class={[\n              'v-slide-group__prev',\n              { 'v-slide-group__prev--disabled': !hasPrev.value },\n            ]}\n            onMousedown={ onFocusAffixes }\n            onClick={ () => hasPrev.value && scrollTo('prev') }\n          >\n            { slots.prev?.(slotProps.value) ?? (\n              <VFadeTransition>\n                <VIcon icon={ isRtl.value ? props.nextIcon : props.prevIcon }></VIcon>\n              </VFadeTransition>\n            )}\n          </div>\n        )}\n\n        <div\n          key=\"container\"\n          ref={ containerRef }\n          class=\"v-slide-group__container\"\n          onScroll={ onScroll }\n        >\n          <div\n            ref={ contentRef }\n            class=\"v-slide-group__content\"\n            onFocusin={ onFocusin }\n            onFocusout={ onFocusout }\n            onKeydown={ onKeydown }\n          >\n            { slots.default?.(slotProps.value) }\n          </div>\n        </div>\n\n        { hasAffixes.value && (\n          <div\n            key=\"next\"\n            class={[\n              'v-slide-group__next',\n              { 'v-slide-group__next--disabled': !hasNext.value },\n            ]}\n            onMousedown={ onFocusAffixes }\n            onClick={ () => hasNext.value && scrollTo('next') }\n          >\n            { slots.next?.(slotProps.value) ?? (\n              <VFadeTransition>\n                <VIcon icon={ isRtl.value ? props.prevIcon : props.nextIcon }></VIcon>\n              </VFadeTransition>\n            )}\n          </div>\n        )}\n      </props.tag>\n    ))\n\n    return {\n      selected: group.selected,\n      scrollTo,\n      scrollOffset,\n      focus,\n      hasPrev,\n      hasNext,\n    }\n  },\n})\n\nexport type VSlideGroup = InstanceType<typeof VSlideGroup>\n","// Styles\nimport './VChipGroup.sass'\n\n// Components\nimport { makeVSlideGroupProps, VSlideGroup } from '@/components/VSlideGroup/VSlideGroup'\n\n// Composables\nimport { makeComponentProps } from '@/composables/component'\nimport { provideDefaults } from '@/composables/defaults'\nimport { makeGroupProps, useGroup } from '@/composables/group'\nimport { makeTagProps } from '@/composables/tag'\nimport { makeThemeProps, provideTheme } from '@/composables/theme'\nimport { makeVariantProps } from '@/composables/variant'\n\n// Utilities\nimport { toRef } from 'vue'\nimport { deepEqual, genericComponent, propsFactory, useRender } from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\nimport type { GenericProps } from '@/util'\n\nexport const VChipGroupSymbol = Symbol.for('vuetify:v-chip-group')\n\nexport const makeVChipGroupProps = propsFactory({\n  column: Boolean,\n  filter: Boolean,\n  valueComparator: {\n    type: Function as PropType<typeof deepEqual>,\n    default: deepEqual,\n  },\n\n  ...makeVSlideGroupProps(),\n  ...makeComponentProps(),\n  ...makeGroupProps({ selectedClass: 'v-chip--selected' }),\n  ...makeTagProps(),\n  ...makeThemeProps(),\n  ...makeVariantProps({ variant: 'tonal' } as const),\n}, 'VChipGroup')\n\ntype VChipGroupSlots = {\n  default: {\n    isSelected: (id: number) => boolean\n    select: (id: number, value: boolean) => void\n    next: () => void\n    prev: () => void\n    selected: readonly number[]\n  }\n}\n\nexport const VChipGroup = genericComponent<new <T>(\n  props: {\n    modelValue?: T\n    'onUpdate:modelValue'?: (value: T) => void\n  },\n  slots: VChipGroupSlots,\n) => GenericProps<typeof props, typeof slots>>()({\n  name: 'VChipGroup',\n\n  props: makeVChipGroupProps(),\n\n  emits: {\n    'update:modelValue': (value: any) => true,\n  },\n\n  setup (props, { slots }) {\n    const { themeClasses } = provideTheme(props)\n    const { isSelected, select, next, prev, selected } = useGroup(props, VChipGroupSymbol)\n\n    provideDefaults({\n      VChip: {\n        color: toRef(props, 'color'),\n        disabled: toRef(props, 'disabled'),\n        filter: toRef(props, 'filter'),\n        variant: toRef(props, 'variant'),\n      },\n    })\n\n    useRender(() => {\n      const slideGroupProps = VSlideGroup.filterProps(props)\n\n      return (\n        <VSlideGroup\n          { ...slideGroupProps }\n          class={[\n            'v-chip-group',\n            {\n              'v-chip-group--column': props.column,\n            },\n            themeClasses.value,\n            props.class,\n          ]}\n          style={ props.style }\n        >\n          { slots.default?.({\n            isSelected,\n            select,\n            next,\n            prev,\n            selected: selected.value,\n          })}\n        </VSlideGroup>\n      )\n    })\n\n    return {}\n  },\n})\n\nexport type VChipGroup = InstanceType<typeof VChipGroup>\n","/* eslint-disable complexity */\n// Styles\nimport './VChip.sass'\n\n// Components\nimport { VExpandXTransition } from '@/components/transitions'\nimport { VAvatar } from '@/components/VAvatar'\nimport { VChipGroupSymbol } from '@/components/VChipGroup/VChipGroup'\nimport { VDefaultsProvider } from '@/components/VDefaultsProvider'\nimport { VIcon } from '@/components/VIcon'\n\n// Composables\nimport { makeBorderProps, useBorder } from '@/composables/border'\nimport { makeComponentProps } from '@/composables/component'\nimport { makeDensityProps, useDensity } from '@/composables/density'\nimport { makeElevationProps, useElevation } from '@/composables/elevation'\nimport { makeGroupItemProps, useGroupItem } from '@/composables/group'\nimport { IconValue } from '@/composables/icons'\nimport { useLocale } from '@/composables/locale'\nimport { useProxiedModel } from '@/composables/proxiedModel'\nimport { makeRoundedProps, useRounded } from '@/composables/rounded'\nimport { makeRouterProps, useLink } from '@/composables/router'\nimport { makeSizeProps, useSize } from '@/composables/size'\nimport { makeTagProps } from '@/composables/tag'\nimport { makeThemeProps, provideTheme } from '@/composables/theme'\nimport { genOverlays, makeVariantProps, useVariant } from '@/composables/variant'\n\n// Directives\nimport { Ripple } from '@/directives/ripple'\n\n// Utilities\nimport { computed } from 'vue'\nimport { EventProp, genericComponent, propsFactory } from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\nimport type { RippleDirectiveBinding } from '@/directives/ripple'\n\nexport type VChipSlots = {\n  default: {\n    isSelected: boolean | undefined\n    selectedClass: boolean | (string | undefined)[] | undefined\n    select: ((value: boolean) => void) | undefined\n    toggle: (() => void) | undefined\n    value: unknown\n    disabled: boolean\n  }\n  label: never\n  prepend: never\n  append: never\n  close: never\n  filter: never\n}\n\nexport const makeVChipProps = propsFactory({\n  activeClass: String,\n  appendAvatar: String,\n  appendIcon: IconValue,\n  closable: Boolean,\n  closeIcon: {\n    type: IconValue,\n    default: '$delete',\n  },\n  closeLabel: {\n    type: String,\n    default: '$vuetify.close',\n  },\n  draggable: Boolean,\n  filter: Boolean,\n  filterIcon: {\n    type: String,\n    default: '$complete',\n  },\n  label: Boolean,\n  link: {\n    type: Boolean,\n    default: undefined,\n  },\n  pill: Boolean,\n  prependAvatar: String,\n  prependIcon: IconValue,\n  ripple: {\n    type: [Boolean, Object] as PropType<RippleDirectiveBinding['value']>,\n    default: true,\n  },\n  text: String,\n  modelValue: {\n    type: Boolean,\n    default: true,\n  },\n\n  onClick: EventProp<[MouseEvent]>(),\n  onClickOnce: EventProp<[MouseEvent]>(),\n\n  ...makeBorderProps(),\n  ...makeComponentProps(),\n  ...makeDensityProps(),\n  ...makeElevationProps(),\n  ...makeGroupItemProps(),\n  ...makeRoundedProps(),\n  ...makeRouterProps(),\n  ...makeSizeProps(),\n  ...makeTagProps({ tag: 'span' }),\n  ...makeThemeProps(),\n  ...makeVariantProps({ variant: 'tonal' } as const),\n}, 'VChip')\n\nexport const VChip = genericComponent<VChipSlots>()({\n  name: 'VChip',\n\n  directives: { Ripple },\n\n  props: makeVChipProps(),\n\n  emits: {\n    'click:close': (e: MouseEvent) => true,\n    'update:modelValue': (value: boolean) => true,\n    'group:selected': (val: { value: boolean }) => true,\n    click: (e: MouseEvent | KeyboardEvent) => true,\n  },\n\n  setup (props, { attrs, emit, slots }) {\n    const { t } = useLocale()\n    const { borderClasses } = useBorder(props)\n    const { colorClasses, colorStyles, variantClasses } = useVariant(props)\n    const { densityClasses } = useDensity(props)\n    const { elevationClasses } = useElevation(props)\n    const { roundedClasses } = useRounded(props)\n    const { sizeClasses } = useSize(props)\n    const { themeClasses } = provideTheme(props)\n\n    const isActive = useProxiedModel(props, 'modelValue')\n    const group = useGroupItem(props, VChipGroupSymbol, false)\n    const link = useLink(props, attrs)\n    const isLink = computed(() => props.link !== false && link.isLink.value)\n    const isClickable = computed(() =>\n      !props.disabled &&\n      props.link !== false &&\n      (!!group || props.link || link.isClickable.value)\n    )\n    const closeProps = computed(() => ({\n      'aria-label': t(props.closeLabel),\n      onClick (e: MouseEvent) {\n        e.preventDefault()\n        e.stopPropagation()\n\n        isActive.value = false\n\n        emit('click:close', e)\n      },\n    }))\n\n    function onClick (e: MouseEvent) {\n      emit('click', e)\n\n      if (!isClickable.value) return\n\n      link.navigate?.(e)\n      group?.toggle()\n    }\n\n    function onKeyDown (e: KeyboardEvent) {\n      if (e.key === 'Enter' || e.key === ' ') {\n        e.preventDefault()\n        onClick(e as any as MouseEvent)\n      }\n    }\n\n    return () => {\n      const Tag = (link.isLink.value) ? 'a' : props.tag\n      const hasAppendMedia = !!(props.appendIcon || props.appendAvatar)\n      const hasAppend = !!(hasAppendMedia || slots.append)\n      const hasClose = !!(slots.close || props.closable)\n      const hasFilter = !!(slots.filter || props.filter) && group\n      const hasPrependMedia = !!(props.prependIcon || props.prependAvatar)\n      const hasPrepend = !!(hasPrependMedia || slots.prepend)\n      const hasColor = !group || group.isSelected.value\n\n      return isActive.value && (\n        <Tag\n          class={[\n            'v-chip',\n            {\n              'v-chip--disabled': props.disabled,\n              'v-chip--label': props.label,\n              'v-chip--link': isClickable.value,\n              'v-chip--filter': hasFilter,\n              'v-chip--pill': props.pill,\n            },\n            themeClasses.value,\n            borderClasses.value,\n            hasColor ? colorClasses.value : undefined,\n            densityClasses.value,\n            elevationClasses.value,\n            roundedClasses.value,\n            sizeClasses.value,\n            variantClasses.value,\n            group?.selectedClass.value,\n            props.class,\n          ]}\n          style={[\n            hasColor ? colorStyles.value : undefined,\n            props.style,\n          ]}\n          disabled={ props.disabled || undefined }\n          draggable={ props.draggable }\n          tabindex={ isClickable.value ? 0 : undefined }\n          onClick={ onClick }\n          onKeydown={ isClickable.value && !isLink.value && onKeyDown }\n          v-ripple={[isClickable.value && props.ripple, null]}\n          { ...link.linkProps }\n        >\n          { genOverlays(isClickable.value, 'v-chip') }\n\n          { hasFilter && (\n            <VExpandXTransition key=\"filter\">\n              <div\n                class=\"v-chip__filter\"\n                v-show={ group.isSelected.value }\n              >\n                { !slots.filter ? (\n                  <VIcon\n                    key=\"filter-icon\"\n                    icon={ props.filterIcon }\n                  />\n                ) : (\n                  <VDefaultsProvider\n                    key=\"filter-defaults\"\n                    disabled={ !props.filterIcon }\n                    defaults={{\n                      VIcon: { icon: props.filterIcon },\n                    }}\n                    v-slots:default={ slots.filter }\n                  />\n                )}\n              </div>\n            </VExpandXTransition>\n          )}\n\n          { hasPrepend && (\n            <div key=\"prepend\" class=\"v-chip__prepend\">\n              { !slots.prepend ? (\n                <>\n                  { props.prependIcon && (\n                    <VIcon\n                      key=\"prepend-icon\"\n                      icon={ props.prependIcon }\n                      start\n                    />\n                  )}\n\n                  { props.prependAvatar && (\n                    <VAvatar\n                      key=\"prepend-avatar\"\n                      image={ props.prependAvatar }\n                      start\n                    />\n                  )}\n                </>\n              ) : (\n                <VDefaultsProvider\n                  key=\"prepend-defaults\"\n                  disabled={ !hasPrependMedia }\n                  defaults={{\n                    VAvatar: {\n                      image: props.prependAvatar,\n                      start: true,\n                    },\n                    VIcon: {\n                      icon: props.prependIcon,\n                      start: true,\n                    },\n                  }}\n                  v-slots:default={ slots.prepend }\n                />\n              )}\n            </div>\n          )}\n\n          <div class=\"v-chip__content\" data-no-activator=\"\">\n            { slots.default?.({\n              isSelected: group?.isSelected.value,\n              selectedClass: group?.selectedClass.value,\n              select: group?.select,\n              toggle: group?.toggle,\n              value: group?.value.value,\n              disabled: props.disabled,\n            }) ?? props.text }\n          </div>\n\n          { hasAppend && (\n            <div key=\"append\" class=\"v-chip__append\">\n              { !slots.append ? (\n                <>\n                  { props.appendIcon && (\n                    <VIcon\n                      key=\"append-icon\"\n                      end\n                      icon={ props.appendIcon }\n                    />\n                  )}\n\n                  { props.appendAvatar && (\n                    <VAvatar\n                      key=\"append-avatar\"\n                      end\n                      image={ props.appendAvatar }\n                    />\n                  )}\n                </>\n              ) : (\n                <VDefaultsProvider\n                  key=\"append-defaults\"\n                  disabled={ !hasAppendMedia }\n                  defaults={{\n                    VAvatar: {\n                      end: true,\n                      image: props.appendAvatar,\n                    },\n                    VIcon: {\n                      end: true,\n                      icon: props.appendIcon,\n                    },\n                  }}\n                  v-slots:default={ slots.append }\n                />\n              )}\n            </div>\n          )}\n\n          { hasClose && (\n            <button\n              key=\"close\"\n              class=\"v-chip__close\"\n              type=\"button\"\n              { ...closeProps.value }\n            >\n              { !slots.close ? (\n                <VIcon\n                  key=\"close-icon\"\n                  icon={ props.closeIcon }\n                  size=\"x-small\"\n                />\n              ) : (\n                <VDefaultsProvider\n                  key=\"close-defaults\"\n                  defaults={{\n                    VIcon: {\n                      icon: props.closeIcon,\n                      size: 'x-small',\n                    },\n                  }}\n                  v-slots:default={ slots.close }\n                />\n              )}\n            </button>\n          )}\n        </Tag>\n      )\n    }\n  },\n})\n\nexport type VChip = InstanceType<typeof VChip>\n"],"names":["calculateUpdatedTarget","_ref","selectedElement","containerElement","isRtl","isHorizontal","containerSize","getOffsetSize","scrollPosition","getScrollPosition","childrenSize","childrenStartPosition","getOffsetPosition","additionalOffset","calculateCenteredTarget","_ref2","containerOffsetSize","childrenOffsetPosition","childrenOffsetSize","getScrollSize","element","key","getClientSize","rtl","scrollLeft","offsetWidth","scrollWidth","scrollTop","VSlideGroupSymbol","Symbol","for","makeVSlideGroupProps","propsFactory","centerActive","Boolean","direction","type","String","default","symbol","nextIcon","IconValue","prevIcon","showArrows","validator","v","includes","makeComponentProps","makeDisplayProps","mobile","makeTagProps","makeGroupProps","selectedClass","VSlideGroup","genericComponent","name","props","emits","value","setup","slots","useRtl","displayClasses","useDisplay","group","useGroup","isOverflowing","shallowRef","scrollOffset","contentSize","computed","resizeRef","containerRef","contentRect","containerRect","useResizeObserver","contentRef","goTo","useGoTo","goToOptions","container","el","duration","easing","firstSelectedIndex","selected","length","items","findIndex","item","id","lastSelectedIndex","IN_BROWSER","frame","watch","cancelAnimationFrame","requestAnimationFrame","sizeProperty","children","scrollToChildren","isFocused","center","target","scrollToPosition","newPosition","offsetSize","scrollSize","Math","abs","containerWidth","horizontal","onScroll","e","onFocusin","composedPath","onFocusout","ignoreFocusEvent","onFocus","relatedTarget","contains","focus","onFocusAffixes","onKeydown","toFocus","location","preventDefault","querySelector","nextElementSibling","previousElementSibling","firstElementChild","lastElementChild","focusable","focusableChildren","preventScroll","scrollTo","offsetStep","slotProps","next","prev","select","isSelected","hasAffixes","hasPrev","hasNext","clientSize","scrollSizeMax","useRender","_createVNode","tag","class","style","onClick","VFadeTransition","VIcon","VChipGroupSymbol","makeVChipGroupProps","column","filter","valueComparator","Function","deepEqual","makeThemeProps","makeVariantProps","variant","themeClasses","provideTheme","provideDefaults","VChip","color","toRef","disabled","slideGroupProps","filterProps","_mergeProps","makeVChipProps","activeClass","appendAvatar","appendIcon","closable","closeIcon","closeLabel","draggable","filterIcon","label","link","undefined","pill","prependAvatar","prependIcon","ripple","Object","text","modelValue","EventProp","onClickOnce","makeBorderProps","makeDensityProps","makeElevationProps","makeGroupItemProps","makeRoundedProps","makeRouterProps","makeSizeProps","directives","Ripple","val","click","attrs","emit","t","useLocale","borderClasses","useBorder","colorClasses","colorStyles","variantClasses","useVariant","densityClasses","useDensity","elevationClasses","useElevation","roundedClasses","useRounded","sizeClasses","useSize","isActive","useProxiedModel","useGroupItem","useLink","isLink","isClickable","closeProps","stopPropagation","navigate","toggle","onKeyDown","Tag","hasAppendMedia","hasAppend","append","hasClose","close","hasFilter","hasPrependMedia","hasPrepend","prepend","hasColor","_withDirectives","linkProps","genOverlays","VExpandXTransition","VDefaultsProvider","icon","_vShow","VAvatar","image","start","_Fragment","end","size","_resolveDirective"],"sourceRoot":""}