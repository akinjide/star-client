{"version":3,"file":"js/971.9a063e8a.js","mappings":"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","sources":["webpack://star-client/../../../src/components/VTooltip/VTooltip.tsx","webpack://star-client/./src/components/IconButton.vue","webpack://star-client/./src/components/IconButton.vue?5d45","webpack://star-client/../../../src/components/VCheckbox/VCheckboxBtn.tsx","webpack://star-client/../../../src/components/VMenu/VMenu.tsx","webpack://star-client/../../../src/components/VVirtualScroll/VVirtualScrollItem.tsx","webpack://star-client/../../src/composables/virtual.ts","webpack://star-client/../../../src/components/VVirtualScroll/VVirtualScroll.tsx","webpack://star-client/../../../src/components/VSelect/useScrolling.ts","webpack://star-client/../../../src/components/VSelect/VSelect.tsx"],"sourcesContent":["// Styles\nimport './VTooltip.sass'\n\n// Components\nimport { VOverlay } from '@/components/VOverlay'\nimport { makeVOverlayProps } from '@/components/VOverlay/VOverlay'\n\n// Composables\nimport { forwardRefs } from '@/composables/forwardRefs'\nimport { useProxiedModel } from '@/composables/proxiedModel'\nimport { useScopeId } from '@/composables/scopeId'\n\n// Utilities\nimport { computed, mergeProps, ref } from 'vue'\nimport { genericComponent, getUid, omit, propsFactory, useRender } from '@/util'\n\n// Types\nimport type { StrategyProps } from '@/components/VOverlay/locationStrategies'\nimport type { OverlaySlots } from '@/components/VOverlay/VOverlay'\n\nexport const makeVTooltipProps = propsFactory({\n  id: String,\n  text: String,\n\n  ...omit(makeVOverlayProps({\n    closeOnBack: false,\n    location: 'end' as const,\n    locationStrategy: 'connected' as const,\n    eager: true,\n    minWidth: 0,\n    offset: 10,\n    openOnClick: false,\n    openOnHover: true,\n    origin: 'auto' as const,\n    scrim: false,\n    scrollStrategy: 'reposition' as const,\n    transition: false,\n  }), [\n    'absolute',\n    'persistent',\n  ]),\n}, 'VTooltip')\n\nexport const VTooltip = genericComponent<OverlaySlots>()({\n  name: 'VTooltip',\n\n  props: makeVTooltipProps(),\n\n  emits: {\n    'update:modelValue': (value: boolean) => true,\n  },\n\n  setup (props, { slots }) {\n    const isActive = useProxiedModel(props, 'modelValue')\n    const { scopeId } = useScopeId()\n\n    const uid = getUid()\n    const id = computed(() => props.id || `v-tooltip-${uid}`)\n\n    const overlay = ref<VOverlay>()\n\n    const location = computed(() => {\n      return props.location.split(' ').length > 1\n        ? props.location\n        : props.location + ' center' as StrategyProps['location']\n    })\n\n    const origin = computed(() => {\n      return (\n        props.origin === 'auto' ||\n        props.origin === 'overlap' ||\n        props.origin.split(' ').length > 1 ||\n        props.location.split(' ').length > 1\n      ) ? props.origin\n        : props.origin + ' center' as StrategyProps['origin']\n    })\n\n    const transition = computed(() => {\n      if (props.transition) return props.transition\n      return isActive.value ? 'scale-transition' : 'fade-transition'\n    })\n\n    const activatorProps = computed(() =>\n      mergeProps({\n        'aria-describedby': id.value,\n      }, props.activatorProps)\n    )\n\n    useRender(() => {\n      const overlayProps = VOverlay.filterProps(props)\n\n      return (\n        <VOverlay\n          ref={ overlay }\n          class={[\n            'v-tooltip',\n            props.class,\n          ]}\n          style={ props.style }\n          id={ id.value }\n          { ...overlayProps }\n          v-model={ isActive.value }\n          transition={ transition.value }\n          absolute\n          location={ location.value }\n          origin={ origin.value }\n          persistent\n          role=\"tooltip\"\n          activatorProps={ activatorProps.value }\n          _disableGlobalStack\n          { ...scopeId }\n        >\n          {{\n            activator: slots.activator,\n            default: (...args) => slots.default?.(...args) ?? props.text,\n          }}\n        </VOverlay>\n      )\n    })\n\n    return forwardRefs({}, overlay)\n  },\n})\n\nexport type VTooltip = InstanceType<typeof VTooltip>\n","<template>\n  <v-tooltip :text=\"tooltipText\" location=\"top\">\n    <template v-slot:activator=\"{ props }\">\n      <v-btn\n        class=\"mx-1\"\n        :color=\"color\"\n        :icon=\"icon\"\n        variant=\"tonal\"\n        :size=\"size\"\n        v-bind=\"props\"\n        @click=\"$emit('action')\"\n      ></v-btn>\n    </template>\n  </v-tooltip>\n</template>\n\n<script>\nexport default {\n  name: 'IconButton',\n  props: {\n    tooltipText: {\n      type: String,\n      required: true\n    },\n    icon: {\n      type: String,\n      required: true\n    },\n    size: {\n      type: String,\n      required: false,\n      default: 'x-small'\n    },\n    color: {\n      type: String,\n      required: true\n    }\n  }\n}\n</script>\n","import { render } from \"./IconButton.vue?vue&type=template&id=c52769ee\"\nimport script from \"./IconButton.vue?vue&type=script&lang=js\"\nexport * from \"./IconButton.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","// Components\nimport { makeVSelectionControlProps, VSelectionControl } from '@/components/VSelectionControl/VSelectionControl'\n\n// Composables\nimport { IconValue } from '@/composables/icons'\nimport { useProxiedModel } from '@/composables/proxiedModel'\n\n// Utilities\nimport { computed } from 'vue'\nimport { genericComponent, omit, propsFactory, useRender } from '@/util'\n\n// Types\nimport type { VSelectionControlSlots } from '@/components/VSelectionControl/VSelectionControl'\nimport type { GenericProps } from '@/util'\n\nexport const makeVCheckboxBtnProps = propsFactory({\n  indeterminate: Boolean,\n  indeterminateIcon: {\n    type: IconValue,\n    default: '$checkboxIndeterminate',\n  },\n\n  ...makeVSelectionControlProps({\n    falseIcon: '$checkboxOff',\n    trueIcon: '$checkboxOn',\n  }),\n}, 'VCheckboxBtn')\n\nexport const VCheckboxBtn = genericComponent<new <T>(\n  props: {\n    modelValue?: T\n    'onUpdate:modelValue'?: (value: T) => void\n  },\n  slots: VSelectionControlSlots,\n) => GenericProps<typeof props, typeof slots>>()({\n  name: 'VCheckboxBtn',\n\n  props: makeVCheckboxBtnProps(),\n\n  emits: {\n    'update:modelValue': (value: any) => true,\n    'update:indeterminate': (value: boolean) => true,\n  },\n\n  setup (props, { slots }) {\n    const indeterminate = useProxiedModel(props, 'indeterminate')\n    const model = useProxiedModel(props, 'modelValue')\n\n    function onChange (v: any) {\n      if (indeterminate.value) {\n        indeterminate.value = false\n      }\n    }\n\n    const falseIcon = computed(() => {\n      return indeterminate.value\n        ? props.indeterminateIcon\n        : props.falseIcon\n    })\n\n    const trueIcon = computed(() => {\n      return indeterminate.value\n        ? props.indeterminateIcon\n        : props.trueIcon\n    })\n\n    useRender(() => {\n      const controlProps = omit(VSelectionControl.filterProps(props), ['modelValue'])\n      return (\n        <VSelectionControl\n          { ...controlProps }\n          v-model={ model.value }\n          class={[\n            'v-checkbox-btn',\n            props.class,\n          ]}\n          style={ props.style }\n          type=\"checkbox\"\n          onUpdate:modelValue={ onChange }\n          falseIcon={ falseIcon.value }\n          trueIcon={ trueIcon.value }\n          aria-checked={ indeterminate.value ? 'mixed' : undefined }\n          v-slots={ slots }\n        />\n      )\n    })\n\n    return {}\n  },\n})\n\nexport type VCheckboxBtn = InstanceType<typeof VCheckboxBtn>\n","// Styles\nimport './VMenu.sass'\n\n// Components\nimport { VDialogTransition } from '@/components/transitions'\nimport { VDefaultsProvider } from '@/components/VDefaultsProvider'\nimport { VOverlay } from '@/components/VOverlay'\nimport { makeVOverlayProps } from '@/components/VOverlay/VOverlay'\n\n// Composables\nimport { forwardRefs } from '@/composables/forwardRefs'\nimport { useRtl } from '@/composables/locale'\nimport { useProxiedModel } from '@/composables/proxiedModel'\nimport { useScopeId } from '@/composables/scopeId'\n\n// Utilities\nimport {\n  computed,\n  inject,\n  mergeProps,\n  nextTick,\n  onBeforeUnmount,\n  onDeactivated,\n  provide,\n  ref,\n  shallowRef,\n  watch,\n} from 'vue'\nimport { VMenuSymbol } from './shared'\nimport {\n  focusableChildren,\n  focusChild,\n  genericComponent,\n  getNextElement,\n  getUid,\n  isClickInsideElement,\n  omit,\n  propsFactory,\n  useRender,\n} from '@/util'\n\n// Types\nimport type { Component } from 'vue'\nimport type { OverlaySlots } from '@/components/VOverlay/VOverlay'\n\nexport const makeVMenuProps = propsFactory({\n  // TODO\n  // disableKeys: Boolean,\n  id: String,\n  submenu: Boolean,\n\n  ...omit(makeVOverlayProps({\n    closeDelay: 250,\n    closeOnContentClick: true,\n    locationStrategy: 'connected' as const,\n    location: undefined,\n    openDelay: 300,\n    scrim: false,\n    scrollStrategy: 'reposition' as const,\n    transition: { component: VDialogTransition as Component },\n  }), ['absolute']),\n}, 'VMenu')\n\nexport const VMenu = genericComponent<OverlaySlots>()({\n  name: 'VMenu',\n\n  props: makeVMenuProps(),\n\n  emits: {\n    'update:modelValue': (value: boolean) => true,\n  },\n\n  setup (props, { slots }) {\n    const isActive = useProxiedModel(props, 'modelValue')\n    const { scopeId } = useScopeId()\n    const { isRtl } = useRtl()\n\n    const uid = getUid()\n    const id = computed(() => props.id || `v-menu-${uid}`)\n\n    const overlay = ref<VOverlay>()\n\n    const parent = inject(VMenuSymbol, null)\n    const openChildren = shallowRef(new Set<number>())\n    provide(VMenuSymbol, {\n      register () {\n        openChildren.value.add(uid)\n      },\n      unregister () {\n        openChildren.value.delete(uid)\n      },\n      closeParents (e) {\n        setTimeout(() => {\n          if (!openChildren.value.size &&\n            !props.persistent &&\n            (e == null || (overlay.value?.contentEl && !isClickInsideElement(e, overlay.value.contentEl)))\n          ) {\n            isActive.value = false\n            parent?.closeParents()\n          }\n        }, 40)\n      },\n    })\n\n    onBeforeUnmount(() => parent?.unregister())\n    onDeactivated(() => isActive.value = false)\n\n    async function onFocusIn (e: FocusEvent) {\n      const before = e.relatedTarget as HTMLElement | null\n      const after = e.target as HTMLElement | null\n\n      await nextTick()\n\n      if (\n        isActive.value &&\n        before !== after &&\n        overlay.value?.contentEl &&\n        // We're the topmost menu\n        overlay.value?.globalTop &&\n        // It isn't the document or the menu body\n        ![document, overlay.value.contentEl].includes(after!) &&\n        // It isn't inside the menu body\n        !overlay.value.contentEl.contains(after)\n      ) {\n        const focusable = focusableChildren(overlay.value.contentEl)\n        focusable[0]?.focus()\n      }\n    }\n\n    watch(isActive, val => {\n      if (val) {\n        parent?.register()\n        document.addEventListener('focusin', onFocusIn, { once: true })\n      } else {\n        parent?.unregister()\n        document.removeEventListener('focusin', onFocusIn)\n      }\n    })\n\n    function onClickOutside (e: MouseEvent) {\n      parent?.closeParents(e)\n    }\n\n    function onKeydown (e: KeyboardEvent) {\n      if (props.disabled) return\n\n      if (e.key === 'Tab' || (e.key === 'Enter' && !props.closeOnContentClick)) {\n        if (\n          e.key === 'Enter' &&\n          ((e.target instanceof HTMLTextAreaElement) ||\n          (e.target instanceof HTMLInputElement && !!e.target.closest('form')))\n        ) return\n        if (e.key === 'Enter') e.preventDefault()\n\n        const nextElement = getNextElement(\n          focusableChildren(overlay.value?.contentEl as Element, false),\n          e.shiftKey ? 'prev' : 'next',\n          (el: HTMLElement) => el.tabIndex >= 0\n        )\n        if (!nextElement) {\n          isActive.value = false\n          overlay.value?.activatorEl?.focus()\n        }\n      } else if (props.submenu && e.key === (isRtl.value ? 'ArrowRight' : 'ArrowLeft')) {\n        isActive.value = false\n        overlay.value?.activatorEl?.focus()\n      }\n    }\n\n    function onActivatorKeydown (e: KeyboardEvent) {\n      if (props.disabled) return\n\n      const el = overlay.value?.contentEl\n      if (el && isActive.value) {\n        if (e.key === 'ArrowDown') {\n          e.preventDefault()\n          e.stopImmediatePropagation()\n          focusChild(el, 'next')\n        } else if (e.key === 'ArrowUp') {\n          e.preventDefault()\n          e.stopImmediatePropagation()\n          focusChild(el, 'prev')\n        } else if (props.submenu) {\n          if (e.key === (isRtl.value ? 'ArrowRight' : 'ArrowLeft')) {\n            isActive.value = false\n          } else if (e.key === (isRtl.value ? 'ArrowLeft' : 'ArrowRight')) {\n            e.preventDefault()\n            focusChild(el, 'first')\n          }\n        }\n      } else if (\n        props.submenu\n          ? e.key === (isRtl.value ? 'ArrowLeft' : 'ArrowRight')\n          : ['ArrowDown', 'ArrowUp'].includes(e.key)\n      ) {\n        isActive.value = true\n        e.preventDefault()\n        setTimeout(() => setTimeout(() => onActivatorKeydown(e)))\n      }\n    }\n\n    const activatorProps = computed(() =>\n      mergeProps({\n        'aria-haspopup': 'menu',\n        'aria-expanded': String(isActive.value),\n        'aria-owns': id.value,\n        onKeydown: onActivatorKeydown,\n      }, props.activatorProps)\n    )\n\n    useRender(() => {\n      const overlayProps = VOverlay.filterProps(props)\n\n      return (\n        <VOverlay\n          ref={ overlay }\n          id={ id.value }\n          class={[\n            'v-menu',\n            props.class,\n          ]}\n          style={ props.style }\n          { ...overlayProps }\n          v-model={ isActive.value }\n          absolute\n          activatorProps={ activatorProps.value }\n          location={ props.location ?? (props.submenu ? 'end' : 'bottom') }\n          onClick:outside={ onClickOutside }\n          onKeydown={ onKeydown }\n          { ...scopeId }\n        >\n          {{\n            activator: slots.activator,\n            default: (...args) => (\n              <VDefaultsProvider root=\"VMenu\">\n                { slots.default?.(...args) }\n              </VDefaultsProvider>\n            ),\n          }}\n        </VOverlay>\n      )\n    })\n\n    return forwardRefs({ id, ΨopenChildren: openChildren }, overlay)\n  },\n})\n\nexport type VMenu = InstanceType<typeof VMenu>\n","// Composables\nimport { makeComponentProps } from '@/composables/component'\nimport { useResizeObserver } from '@/composables/resizeObserver'\n\n// Utilities\nimport { watch } from 'vue'\nimport { genericComponent, propsFactory, useRender } from '@/util'\n\n// Types\nimport type { GenericProps, TemplateRef } from '@/util'\n\nexport const makeVVirtualScrollItemProps = propsFactory({\n  renderless: Boolean,\n\n  ...makeComponentProps(),\n}, 'VVirtualScrollItem')\n\nexport const VVirtualScrollItem = genericComponent<new <Renderless extends boolean = false>(\n  props: {\n    renderless?: Renderless\n  },\n  slots: {\n    default: Renderless extends true ? {\n      itemRef: TemplateRef\n    } : never\n  }\n) => GenericProps<typeof props, typeof slots>>()({\n  name: 'VVirtualScrollItem',\n\n  inheritAttrs: false,\n\n  props: makeVVirtualScrollItemProps(),\n\n  emits: {\n    'update:height': (height: number) => true,\n  },\n\n  setup (props, { attrs, emit, slots }) {\n    const { resizeRef, contentRect } = useResizeObserver(undefined, 'border')\n\n    watch(() => contentRect.value?.height, height => {\n      if (height != null) emit('update:height', height)\n    })\n\n    useRender(() => props.renderless ? (\n      <>\n        { slots.default?.({ itemRef: resizeRef }) }\n      </>\n    ) : (\n      <div\n        ref={ resizeRef }\n        class={[\n          'v-virtual-scroll__item',\n          props.class,\n        ]}\n        style={ props.style }\n        { ...attrs }\n      >\n        { (slots.default as any)?.() }\n      </div>\n    ))\n  },\n})\n","// Composables\nimport { useDisplay } from '@/composables/display'\nimport { useResizeObserver } from '@/composables/resizeObserver'\n\n// Utilities\nimport { computed, nextTick, onScopeDispose, ref, shallowRef, watch, watchEffect } from 'vue'\nimport { clamp, debounce, IN_BROWSER, propsFactory } from '@/util'\n\n// Types\nimport type { Ref } from 'vue'\n\nconst UP = -1\nconst DOWN = 1\n\n/** Determines how large each batch of items should be */\nconst BUFFER_PX = 100\n\ntype VirtualProps = {\n  itemHeight?: number | string\n  height?: number | string\n}\n\nexport const makeVirtualProps = propsFactory({\n  itemHeight: {\n    type: [Number, String],\n    default: null,\n  },\n  height: [Number, String],\n}, 'virtual')\n\nexport function useVirtual <T> (props: VirtualProps, items: Ref<readonly T[]>) {\n  const display = useDisplay()\n\n  const itemHeight = shallowRef(0)\n  watchEffect(() => {\n    itemHeight.value = parseFloat(props.itemHeight || 0)\n  })\n\n  const first = shallowRef(0)\n  const last = shallowRef(Math.ceil(\n    // Assume 16px items filling the entire screen height if\n    // not provided. This is probably incorrect but it minimises\n    // the chance of ending up with empty space at the bottom.\n    // The default value is set here to avoid poisoning getSize()\n    (parseInt(props.height!) || display.height.value) / (itemHeight.value || 16)\n  ) || 1)\n  const paddingTop = shallowRef(0)\n  const paddingBottom = shallowRef(0)\n\n  /** The scrollable element */\n  const containerRef = ref<HTMLElement>()\n  /** An element marking the top of the scrollable area,\n   * used to add an offset if there's padding or other elements above the virtual list */\n  const markerRef = ref<HTMLElement>()\n  /** markerRef's offsetTop, lazily evaluated */\n  let markerOffset = 0\n\n  const { resizeRef, contentRect } = useResizeObserver()\n  watchEffect(() => {\n    resizeRef.value = containerRef.value\n  })\n  const viewportHeight = computed(() => {\n    return containerRef.value === document.documentElement\n      ? display.height.value\n      : contentRect.value?.height || parseInt(props.height!) || 0\n  })\n  /** All static elements have been rendered and we have an assumed item height */\n  const hasInitialRender = computed(() => {\n    return !!(containerRef.value && markerRef.value && viewportHeight.value && itemHeight.value)\n  })\n\n  let sizes = Array.from<number | null>({ length: items.value.length })\n  let offsets = Array.from<number>({ length: items.value.length })\n  const updateTime = shallowRef(0)\n  let targetScrollIndex = -1\n\n  function getSize (index: number) {\n    return sizes[index] || itemHeight.value\n  }\n\n  const updateOffsets = debounce(() => {\n    const start = performance.now()\n    offsets[0] = 0\n    const length = items.value.length\n    for (let i = 1; i <= length - 1; i++) {\n      offsets[i] = (offsets[i - 1] || 0) + getSize(i - 1)\n    }\n    updateTime.value = Math.max(updateTime.value, performance.now() - start)\n  }, updateTime)\n\n  const unwatch = watch(hasInitialRender, v => {\n    if (!v) return\n    // First render is complete, update offsets and visible\n    // items in case our assumed item height was incorrect\n\n    unwatch()\n    markerOffset = markerRef.value!.offsetTop\n    updateOffsets.immediate()\n    calculateVisibleItems()\n\n    if (!~targetScrollIndex) return\n\n    nextTick(() => {\n      IN_BROWSER && window.requestAnimationFrame(() => {\n        scrollToIndex(targetScrollIndex)\n        targetScrollIndex = -1\n      })\n    })\n  })\n\n  onScopeDispose(() => {\n    updateOffsets.clear()\n  })\n\n  function handleItemResize (index: number, height: number) {\n    const prevHeight = sizes[index]\n    const prevMinHeight = itemHeight.value\n\n    itemHeight.value = prevMinHeight ? Math.min(itemHeight.value, height) : height\n\n    if (prevHeight !== height || prevMinHeight !== itemHeight.value) {\n      sizes[index] = height\n      updateOffsets()\n    }\n  }\n\n  function calculateOffset (index: number) {\n    index = clamp(index, 0, items.value.length - 1)\n    return offsets[index] || 0\n  }\n\n  function calculateIndex (scrollTop: number) {\n    return binaryClosest(offsets, scrollTop)\n  }\n\n  let lastScrollTop = 0\n  let scrollVelocity = 0\n  let lastScrollTime = 0\n\n  watch(viewportHeight, (val, oldVal) => {\n    if (oldVal) {\n      calculateVisibleItems()\n      if (val < oldVal) {\n        requestAnimationFrame(() => {\n          scrollVelocity = 0\n          calculateVisibleItems()\n        })\n      }\n    }\n  })\n\n  function handleScroll () {\n    if (!containerRef.value || !markerRef.value) return\n\n    const scrollTop = containerRef.value.scrollTop\n    const scrollTime = performance.now()\n    const scrollDeltaT = scrollTime - lastScrollTime\n\n    if (scrollDeltaT > 500) {\n      scrollVelocity = Math.sign(scrollTop - lastScrollTop)\n\n      // Not super important, only update at the\n      // start of a scroll sequence to avoid reflows\n      markerOffset = markerRef.value.offsetTop\n    } else {\n      scrollVelocity = scrollTop - lastScrollTop\n    }\n\n    lastScrollTop = scrollTop\n    lastScrollTime = scrollTime\n\n    calculateVisibleItems()\n  }\n  function handleScrollend () {\n    if (!containerRef.value || !markerRef.value) return\n\n    scrollVelocity = 0\n    lastScrollTime = 0\n\n    calculateVisibleItems()\n  }\n\n  let raf = -1\n  function calculateVisibleItems () {\n    cancelAnimationFrame(raf)\n    raf = requestAnimationFrame(_calculateVisibleItems)\n  }\n  function _calculateVisibleItems () {\n    if (!containerRef.value || !viewportHeight.value) return\n    const scrollTop = lastScrollTop - markerOffset\n    const direction = Math.sign(scrollVelocity)\n\n    const startPx = Math.max(0, scrollTop - BUFFER_PX)\n    const start = clamp(calculateIndex(startPx), 0, items.value.length)\n\n    const endPx = scrollTop + viewportHeight.value + BUFFER_PX\n    const end = clamp(calculateIndex(endPx) + 1, start + 1, items.value.length)\n\n    if (\n      // Only update the side we're scrolling towards,\n      // the other side will be updated incidentally\n      (direction !== UP || start < first.value) &&\n      (direction !== DOWN || end > last.value)\n    ) {\n      const topOverflow = calculateOffset(first.value) - calculateOffset(start)\n      const bottomOverflow = calculateOffset(end) - calculateOffset(last.value)\n      const bufferOverflow = Math.max(topOverflow, bottomOverflow)\n\n      if (bufferOverflow > BUFFER_PX) {\n        first.value = start\n        last.value = end\n      } else {\n        // Only update the side that's reached its limit if there's still buffer left\n        if (start <= 0) first.value = start\n        if (end >= items.value.length) last.value = end\n      }\n    }\n\n    paddingTop.value = calculateOffset(first.value)\n    paddingBottom.value = calculateOffset(items.value.length) - calculateOffset(last.value)\n  }\n\n  function scrollToIndex (index: number) {\n    const offset = calculateOffset(index)\n    if (!containerRef.value || (index && !offset)) {\n      targetScrollIndex = index\n    } else {\n      containerRef.value.scrollTop = offset\n    }\n  }\n\n  const computedItems = computed(() => {\n    return items.value.slice(first.value, last.value).map((item, index) => ({\n      raw: item,\n      index: index + first.value,\n    }))\n  })\n\n  watch(items, () => {\n    sizes = Array.from({ length: items.value.length })\n    offsets = Array.from({ length: items.value.length })\n    updateOffsets.immediate()\n    calculateVisibleItems()\n  }, { deep: true })\n\n  return {\n    calculateVisibleItems,\n    containerRef,\n    markerRef,\n    computedItems,\n    paddingTop,\n    paddingBottom,\n    scrollToIndex,\n    handleScroll,\n    handleScrollend,\n    handleItemResize,\n  }\n}\n\n// https://gist.github.com/robertleeplummerjr/1cc657191d34ecd0a324\nfunction binaryClosest (arr: ArrayLike<number>, val: number) {\n  let high = arr.length - 1\n  let low = 0\n  let mid = 0\n  let item = null\n  let target = -1\n\n  if (arr[high]! < val) {\n    return high\n  }\n\n  while (low <= high) {\n    mid = (low + high) >> 1\n    item = arr[mid]!\n\n    if (item > val) {\n      high = mid - 1\n    } else if (item < val) {\n      target = mid\n      low = mid + 1\n    } else if (item === val) {\n      return mid\n    } else {\n      return low\n    }\n  }\n\n  return target\n}\n","// Styles\nimport './VVirtualScroll.sass'\n\n// Components\nimport { VVirtualScrollItem } from './VVirtualScrollItem'\n\n// Composables\nimport { makeComponentProps } from '@/composables/component'\nimport { makeDimensionProps, useDimension } from '@/composables/dimensions'\nimport { useToggleScope } from '@/composables/toggleScope'\nimport { makeVirtualProps, useVirtual } from '@/composables/virtual'\n\n// Utilities\nimport { onMounted, onScopeDispose, toRef } from 'vue'\nimport {\n  convertToUnit,\n  genericComponent,\n  getCurrentInstance,\n  getScrollParent,\n  propsFactory,\n  useRender,\n} from '@/util'\n\n// Types\nimport type { PropType, Ref } from 'vue'\nimport type { GenericProps } from '@/util'\n\nexport interface VVirtualScrollSlot<T> {\n  item: T\n  index: number\n}\n\nexport const makeVVirtualScrollProps = propsFactory({\n  items: {\n    type: Array as PropType<readonly unknown[]>,\n    default: () => ([]),\n  },\n  renderless: Boolean,\n\n  ...makeVirtualProps(),\n  ...makeComponentProps(),\n  ...makeDimensionProps(),\n}, 'VVirtualScroll')\n\nexport const VVirtualScroll = genericComponent<new <T, Renderless extends boolean = false>(\n  props: {\n    items?: readonly T[]\n    renderless?: Renderless\n  },\n  slots: {\n    default: VVirtualScrollSlot<T> & (Renderless extends true ? {\n      itemRef: Ref<HTMLElement | undefined>\n    } : {})\n  }\n) => GenericProps<typeof props, typeof slots>>()({\n  name: 'VVirtualScroll',\n\n  props: makeVVirtualScrollProps(),\n\n  setup (props, { slots }) {\n    const vm = getCurrentInstance('VVirtualScroll')\n    const { dimensionStyles } = useDimension(props)\n    const {\n      calculateVisibleItems,\n      containerRef,\n      markerRef,\n      handleScroll,\n      handleScrollend,\n      handleItemResize,\n      scrollToIndex,\n      paddingTop,\n      paddingBottom,\n      computedItems,\n    } = useVirtual(props, toRef(props, 'items'))\n\n    useToggleScope(() => props.renderless, () => {\n      function handleListeners (add = false) {\n        const method = add ? 'addEventListener' : 'removeEventListener'\n\n        if (containerRef.value === document.documentElement) {\n          document[method]('scroll', handleScroll, { passive: true })\n          document[method]('scrollend', handleScrollend)\n        } else {\n          containerRef.value?.[method]('scroll', handleScroll, { passive: true })\n          containerRef.value?.[method]('scrollend', handleScrollend)\n        }\n      }\n\n      onMounted(() => {\n        containerRef.value = getScrollParent(vm.vnode.el as HTMLElement, true)\n        handleListeners(true)\n      })\n      onScopeDispose(handleListeners)\n    })\n\n    useRender(() => {\n      const children = computedItems.value.map(item => (\n        <VVirtualScrollItem\n          key={ item.index }\n          renderless={ props.renderless }\n          onUpdate:height={ height => handleItemResize(item.index, height) }\n        >\n          { slotProps => slots.default?.({ item: item.raw, index: item.index, ...slotProps }) }\n        </VVirtualScrollItem>\n      ))\n\n      return props.renderless ? (\n        <>\n          <div ref={ markerRef } class=\"v-virtual-scroll__spacer\" style={{ paddingTop: convertToUnit(paddingTop.value) }} />\n          { children }\n          <div class=\"v-virtual-scroll__spacer\" style={{ paddingBottom: convertToUnit(paddingBottom.value) }} />\n        </>\n      ) : (\n        <div\n          ref={ containerRef }\n          class={[\n            'v-virtual-scroll',\n            props.class,\n          ]}\n          onScrollPassive={ handleScroll }\n          onScrollend={ handleScrollend }\n          style={[\n            dimensionStyles.value,\n            props.style,\n          ]}\n        >\n          <div\n            ref={ markerRef }\n            class=\"v-virtual-scroll__container\"\n            style={{\n              paddingTop: convertToUnit(paddingTop.value),\n              paddingBottom: convertToUnit(paddingBottom.value),\n            }}\n          >\n            { children }\n          </div>\n        </div>\n      )\n    })\n\n    return {\n      calculateVisibleItems,\n      scrollToIndex,\n    }\n  },\n})\n\nexport type VVirtualScroll = InstanceType<typeof VVirtualScroll>\n","// Utilities\nimport { shallowRef, watch } from 'vue'\n\n// Types\nimport type { Ref } from 'vue'\nimport type { VList } from '@/components/VList'\nimport type { VTextField } from '@/components/VTextField'\n\nexport function useScrolling (listRef: Ref<VList | undefined>, textFieldRef: Ref<VTextField | undefined>) {\n  const isScrolling = shallowRef(false)\n  let scrollTimeout: number\n  function onListScroll (e: Event) {\n    cancelAnimationFrame(scrollTimeout)\n    isScrolling.value = true\n    scrollTimeout = requestAnimationFrame(() => {\n      scrollTimeout = requestAnimationFrame(() => {\n        isScrolling.value = false\n      })\n    })\n  }\n  async function finishScrolling () {\n    await new Promise(resolve => requestAnimationFrame(resolve))\n    await new Promise(resolve => requestAnimationFrame(resolve))\n    await new Promise(resolve => requestAnimationFrame(resolve))\n    await new Promise<void>(resolve => {\n      if (isScrolling.value) {\n        const stop = watch(isScrolling, () => {\n          stop()\n          resolve()\n        })\n      } else resolve()\n    })\n  }\n  async function onListKeydown (e: KeyboardEvent) {\n    if (e.key === 'Tab') {\n      textFieldRef.value?.focus()\n    }\n\n    if (!['PageDown', 'PageUp', 'Home', 'End'].includes(e.key)) return\n    const el: HTMLElement = listRef.value?.$el\n    if (!el) return\n\n    if (e.key === 'Home' || e.key === 'End') {\n      el.scrollTo({\n        top: e.key === 'Home' ? 0 : el.scrollHeight,\n        behavior: 'smooth',\n      })\n    }\n\n    await finishScrolling()\n\n    const children = el.querySelectorAll(':scope > :not(.v-virtual-scroll__spacer)')\n\n    if (e.key === 'PageDown' || e.key === 'Home') {\n      const top = el.getBoundingClientRect().top\n      for (const child of children) {\n        if (child.getBoundingClientRect().top >= top) {\n          (child as HTMLElement).focus()\n          break\n        }\n      }\n    } else {\n      const bottom = el.getBoundingClientRect().bottom\n      for (const child of [...children].reverse()) {\n        if (child.getBoundingClientRect().bottom <= bottom) {\n          (child as HTMLElement).focus()\n          break\n        }\n      }\n    }\n  }\n\n  return {\n    onScrollPassive: onListScroll,\n    onKeydown: onListKeydown,\n  } as Record<string, Function> // typescript doesn't know about vue's event merging\n}\n","// Styles\nimport './VSelect.sass'\n\n// Components\nimport { VDialogTransition } from '@/components/transitions'\nimport { VAvatar } from '@/components/VAvatar'\nimport { VCheckboxBtn } from '@/components/VCheckbox'\nimport { VChip } from '@/components/VChip'\nimport { VDefaultsProvider } from '@/components/VDefaultsProvider'\nimport { VIcon } from '@/components/VIcon'\nimport { VList, VListItem } from '@/components/VList'\nimport { VMenu } from '@/components/VMenu'\nimport { makeVTextFieldProps, VTextField } from '@/components/VTextField/VTextField'\nimport { VVirtualScroll } from '@/components/VVirtualScroll'\n\n// Composables\nimport { useScrolling } from './useScrolling'\nimport { useForm } from '@/composables/form'\nimport { forwardRefs } from '@/composables/forwardRefs'\nimport { IconValue } from '@/composables/icons'\nimport { makeItemsProps, useItems } from '@/composables/list-items'\nimport { useLocale } from '@/composables/locale'\nimport { useProxiedModel } from '@/composables/proxiedModel'\nimport { makeTransitionProps } from '@/composables/transition'\n\n// Utilities\nimport { computed, mergeProps, nextTick, ref, shallowRef, watch } from 'vue'\nimport {\n  checkPrintable,\n  ensureValidVNode,\n  genericComponent,\n  IN_BROWSER,\n  matchesSelector,\n  omit,\n  propsFactory,\n  useRender,\n  wrapInArray,\n} from '@/util'\n\n// Types\nimport type { Component, PropType } from 'vue'\nimport type { VFieldSlots } from '@/components/VField/VField'\nimport type { VInputSlots } from '@/components/VInput/VInput'\nimport type { ListItem } from '@/composables/list-items'\nimport type { GenericProps, SelectItemKey } from '@/util'\n\ntype Primitive = string | number | boolean | symbol\n\ntype Val <T, ReturnObject extends boolean> = [T] extends [Primitive]\n  ? T\n  : (ReturnObject extends true ? T : any)\n\ntype Value <T, ReturnObject extends boolean, Multiple extends boolean> =\n  Multiple extends true\n    ? readonly Val<T, ReturnObject>[]\n    : Val<T, ReturnObject> | null\n\nexport const makeSelectProps = propsFactory({\n  chips: Boolean,\n  closableChips: Boolean,\n  closeText: {\n    type: String,\n    default: '$vuetify.close',\n  },\n  openText: {\n    type: String,\n    default: '$vuetify.open',\n  },\n  eager: Boolean,\n  hideNoData: Boolean,\n  hideSelected: Boolean,\n  listProps: {\n    type: Object as PropType<VList['$props']>,\n  },\n  menu: Boolean,\n  menuIcon: {\n    type: IconValue,\n    default: '$dropdown',\n  },\n  menuProps: {\n    type: Object as PropType<VMenu['$props']>,\n  },\n  multiple: Boolean,\n  noDataText: {\n    type: String,\n    default: '$vuetify.noDataText',\n  },\n  openOnClear: Boolean,\n  itemColor: String,\n\n  ...makeItemsProps({ itemChildren: false }),\n}, 'Select')\n\nexport const makeVSelectProps = propsFactory({\n  ...makeSelectProps(),\n  ...omit(makeVTextFieldProps({\n    modelValue: null,\n    role: 'combobox',\n  }), ['validationValue', 'dirty', 'appendInnerIcon']),\n  ...makeTransitionProps({ transition: { component: VDialogTransition as Component } }),\n}, 'VSelect')\n\ntype ItemType<T> = T extends readonly (infer U)[] ? U : never\n\nexport const VSelect = genericComponent<new <\n  T extends readonly any[],\n  Item = ItemType<T>,\n  ReturnObject extends boolean = false,\n  Multiple extends boolean = false,\n  V extends Value<Item, ReturnObject, Multiple> = Value<Item, ReturnObject, Multiple>\n>(\n  props: {\n    items?: T\n    itemTitle?: SelectItemKey<ItemType<T>>\n    itemValue?: SelectItemKey<ItemType<T>>\n    itemProps?: SelectItemKey<ItemType<T>>\n    returnObject?: ReturnObject\n    multiple?: Multiple\n    modelValue?: V | null\n    'onUpdate:modelValue'?: (value: V) => void\n  },\n  slots: Omit<VInputSlots & VFieldSlots, 'default'> & {\n    item: { item: ListItem<Item>, index: number, props: Record<string, unknown> }\n    chip: { item: ListItem<Item>, index: number, props: Record<string, unknown> }\n    selection: { item: ListItem<Item>, index: number }\n    'prepend-item': never\n    'append-item': never\n    'no-data': never\n  }\n) => GenericProps<typeof props, typeof slots>>()({\n  name: 'VSelect',\n\n  props: makeVSelectProps(),\n\n  emits: {\n    'update:focused': (focused: boolean) => true,\n    'update:modelValue': (value: any) => true,\n    'update:menu': (ue: boolean) => true,\n  },\n\n  setup (props, { slots }) {\n    const { t } = useLocale()\n    const vTextFieldRef = ref()\n    const vMenuRef = ref<VMenu>()\n    const vVirtualScrollRef = ref<VVirtualScroll>()\n    const _menu = useProxiedModel(props, 'menu')\n    const menu = computed({\n      get: () => _menu.value,\n      set: v => {\n        if (_menu.value && !v && vMenuRef.value?.ΨopenChildren.size) return\n        _menu.value = v\n      },\n    })\n    const { items, transformIn, transformOut } = useItems(props)\n    const model = useProxiedModel(\n      props,\n      'modelValue',\n      [],\n      v => transformIn(v === null ? [null] : wrapInArray(v)),\n      v => {\n        const transformed = transformOut(v)\n        return props.multiple ? transformed : (transformed[0] ?? null)\n      }\n    )\n    const counterValue = computed(() => {\n      return typeof props.counterValue === 'function' ? props.counterValue(model.value)\n        : typeof props.counterValue === 'number' ? props.counterValue\n        : model.value.length\n    })\n    const form = useForm()\n    const selectedValues = computed(() => model.value.map(selection => selection.value))\n    const isFocused = shallowRef(false)\n    const label = computed(() => menu.value ? props.closeText : props.openText)\n\n    let keyboardLookupPrefix = ''\n    let keyboardLookupLastTime: number\n\n    const displayItems = computed(() => {\n      if (props.hideSelected) {\n        return items.value.filter(item => !model.value.some(s => props.valueComparator(s, item)))\n      }\n      return items.value\n    })\n\n    const menuDisabled = computed(() => (\n      (props.hideNoData && !displayItems.value.length) ||\n      props.readonly || form?.isReadonly.value\n    ))\n\n    const computedMenuProps = computed(() => {\n      return {\n        ...props.menuProps,\n        activatorProps: {\n          ...(props.menuProps?.activatorProps || {}),\n          'aria-haspopup': 'listbox', // Set aria-haspopup to 'listbox'\n        },\n      }\n    })\n\n    const listRef = ref<VList>()\n    const listEvents = useScrolling(listRef, vTextFieldRef)\n    function onClear (e: MouseEvent) {\n      if (props.openOnClear) {\n        menu.value = true\n      }\n    }\n    function onMousedownControl () {\n      if (menuDisabled.value) return\n\n      menu.value = !menu.value\n    }\n    function onListKeydown (e: KeyboardEvent) {\n      if (checkPrintable(e)) {\n        onKeydown(e)\n      }\n    }\n    function onKeydown (e: KeyboardEvent) {\n      if (!e.key || props.readonly || form?.isReadonly.value) return\n\n      if (['Enter', ' ', 'ArrowDown', 'ArrowUp', 'Home', 'End'].includes(e.key)) {\n        e.preventDefault()\n      }\n\n      if (['Enter', 'ArrowDown', ' '].includes(e.key)) {\n        menu.value = true\n      }\n\n      if (['Escape', 'Tab'].includes(e.key)) {\n        menu.value = false\n      }\n\n      if (e.key === 'Home') {\n        listRef.value?.focus('first')\n      } else if (e.key === 'End') {\n        listRef.value?.focus('last')\n      }\n\n      // html select hotkeys\n      const KEYBOARD_LOOKUP_THRESHOLD = 1000 // milliseconds\n\n      if (props.multiple || !checkPrintable(e)) return\n\n      const now = performance.now()\n      if (now - keyboardLookupLastTime > KEYBOARD_LOOKUP_THRESHOLD) {\n        keyboardLookupPrefix = ''\n      }\n      keyboardLookupPrefix += e.key.toLowerCase()\n      keyboardLookupLastTime = now\n\n      const item = items.value.find(item => item.title.toLowerCase().startsWith(keyboardLookupPrefix))\n      if (item !== undefined) {\n        model.value = [item]\n        const index = displayItems.value.indexOf(item)\n        IN_BROWSER && window.requestAnimationFrame(() => {\n          index >= 0 && vVirtualScrollRef.value?.scrollToIndex(index)\n        })\n      }\n    }\n\n    /** @param set - null means toggle */\n    function select (item: ListItem, set: boolean | null = true) {\n      if (item.props.disabled) return\n\n      if (props.multiple) {\n        const index = model.value.findIndex(selection => props.valueComparator(selection.value, item.value))\n        const add = set == null ? !~index : set\n\n        if (~index) {\n          const value = add ? [...model.value, item] : [...model.value]\n          value.splice(index, 1)\n          model.value = value\n        } else if (add) {\n          model.value = [...model.value, item]\n        }\n      } else {\n        const add = set !== false\n        model.value = add ? [item] : []\n\n        nextTick(() => {\n          menu.value = false\n        })\n      }\n    }\n    function onBlur (e: FocusEvent) {\n      if (!listRef.value?.$el.contains(e.relatedTarget as HTMLElement)) {\n        menu.value = false\n      }\n    }\n    function onAfterEnter () {\n      if (props.eager) {\n        vVirtualScrollRef.value?.calculateVisibleItems()\n      }\n    }\n    function onAfterLeave () {\n      if (isFocused.value) {\n        vTextFieldRef.value?.focus()\n      }\n    }\n    function onFocusin (e: FocusEvent) {\n      isFocused.value = true\n    }\n    function onModelUpdate (v: any) {\n      if (v == null) model.value = []\n      else if (matchesSelector(vTextFieldRef.value, ':autofill') || matchesSelector(vTextFieldRef.value, ':-webkit-autofill')) {\n        const item = items.value.find(item => item.title === v)\n        if (item) {\n          select(item)\n        }\n      } else if (vTextFieldRef.value) {\n        vTextFieldRef.value.value = ''\n      }\n    }\n\n    watch(menu, () => {\n      if (!props.hideSelected && menu.value && model.value.length) {\n        const index = displayItems.value.findIndex(\n          item => model.value.some(s => props.valueComparator(s.value, item.value))\n        )\n        IN_BROWSER && window.requestAnimationFrame(() => {\n          index >= 0 && vVirtualScrollRef.value?.scrollToIndex(index)\n        })\n      }\n    })\n\n    watch(() => props.items, (newVal, oldVal) => {\n      if (menu.value) return\n\n      if (isFocused.value && !oldVal.length && newVal.length) {\n        menu.value = true\n      }\n    })\n\n    useRender(() => {\n      const hasChips = !!(props.chips || slots.chip)\n      const hasList = !!(\n        (!props.hideNoData || displayItems.value.length) ||\n        slots['prepend-item'] ||\n        slots['append-item'] ||\n        slots['no-data']\n      )\n      const isDirty = model.value.length > 0\n      const textFieldProps = VTextField.filterProps(props)\n\n      const placeholder = isDirty || (\n        !isFocused.value &&\n        props.label &&\n        !props.persistentPlaceholder\n      ) ? undefined : props.placeholder\n\n      return (\n        <VTextField\n          ref={ vTextFieldRef }\n          { ...textFieldProps }\n          modelValue={ model.value.map(v => v.props.value).join(', ') }\n          onUpdate:modelValue={ onModelUpdate }\n          v-model:focused={ isFocused.value }\n          validationValue={ model.externalValue }\n          counterValue={ counterValue.value }\n          dirty={ isDirty }\n          class={[\n            'v-select',\n            {\n              'v-select--active-menu': menu.value,\n              'v-select--chips': !!props.chips,\n              [`v-select--${props.multiple ? 'multiple' : 'single'}`]: true,\n              'v-select--selected': model.value.length,\n              'v-select--selection-slot': !!slots.selection,\n            },\n            props.class,\n          ]}\n          style={ props.style }\n          inputmode=\"none\"\n          placeholder={ placeholder }\n          onClick:clear={ onClear }\n          onMousedown:control={ onMousedownControl }\n          onBlur={ onBlur }\n          onKeydown={ onKeydown }\n          aria-label={ t(label.value) }\n          title={ t(label.value) }\n        >\n          {{\n            ...slots,\n            default: () => (\n              <>\n                <VMenu\n                  ref={ vMenuRef }\n                  v-model={ menu.value }\n                  activator=\"parent\"\n                  contentClass=\"v-select__content\"\n                  disabled={ menuDisabled.value }\n                  eager={ props.eager }\n                  maxHeight={ 310 }\n                  openOnClick={ false }\n                  closeOnContentClick={ false }\n                  transition={ props.transition }\n                  onAfterEnter={ onAfterEnter }\n                  onAfterLeave={ onAfterLeave }\n                  { ...computedMenuProps.value }\n                >\n                  { hasList && (\n                    <VList\n                      ref={ listRef }\n                      selected={ selectedValues.value }\n                      selectStrategy={ props.multiple ? 'independent' : 'single-independent' }\n                      onMousedown={ (e: MouseEvent) => e.preventDefault() }\n                      onKeydown={ onListKeydown }\n                      onFocusin={ onFocusin }\n                      tabindex=\"-1\"\n                      aria-live=\"polite\"\n                      color={ props.itemColor ?? props.color }\n                      { ...listEvents }\n                      { ...props.listProps }\n                    >\n                      { slots['prepend-item']?.() }\n\n                      { !displayItems.value.length && !props.hideNoData && (slots['no-data']?.() ?? (\n                        <VListItem title={ t(props.noDataText) } />\n                      ))}\n\n                      <VVirtualScroll ref={ vVirtualScrollRef } renderless items={ displayItems.value }>\n                        { ({ item, index, itemRef }) => {\n                          const itemProps = mergeProps(item.props, {\n                            ref: itemRef,\n                            key: index,\n                            onClick: () => select(item, null),\n                          })\n\n                          return slots.item?.({\n                            item,\n                            index,\n                            props: itemProps,\n                          }) ?? (\n                            <VListItem { ...itemProps } role=\"option\">\n                              {{\n                                prepend: ({ isSelected }) => (\n                                  <>\n                                    { props.multiple && !props.hideSelected ? (\n                                      <VCheckboxBtn\n                                        key={ item.value }\n                                        modelValue={ isSelected }\n                                        ripple={ false }\n                                        tabindex=\"-1\"\n                                      />\n                                    ) : undefined }\n\n                                    { item.props.prependAvatar && (\n                                      <VAvatar image={ item.props.prependAvatar } />\n                                    )}\n\n                                    { item.props.prependIcon && (\n                                      <VIcon icon={ item.props.prependIcon } />\n                                    )}\n                                  </>\n                                ),\n                              }}\n                            </VListItem>\n                          )\n                        }}\n                      </VVirtualScroll>\n\n                      { slots['append-item']?.() }\n                    </VList>\n                  )}\n                </VMenu>\n\n                { model.value.map((item, index) => {\n                  function onChipClose (e: Event) {\n                    e.stopPropagation()\n                    e.preventDefault()\n\n                    select(item, false)\n                  }\n\n                  const slotProps = {\n                    'onClick:close': onChipClose,\n                    onKeydown (e: KeyboardEvent) {\n                      if (e.key !== 'Enter' && e.key !== ' ') return\n\n                      e.preventDefault()\n                      e.stopPropagation()\n\n                      onChipClose(e)\n                    },\n                    onMousedown (e: MouseEvent) {\n                      e.preventDefault()\n                      e.stopPropagation()\n                    },\n                    modelValue: true,\n                    'onUpdate:modelValue': undefined,\n                  }\n\n                  const hasSlot = hasChips ? !!slots.chip : !!slots.selection\n                  const slotContent = hasSlot\n                    ? ensureValidVNode(\n                      hasChips\n                        ? slots.chip!({ item, index, props: slotProps })\n                        : slots.selection!({ item, index })\n                    )\n                    : undefined\n\n                  if (hasSlot && !slotContent) return undefined\n\n                  return (\n                    <div key={ item.value } class=\"v-select__selection\">\n                      { hasChips ? (\n                        !slots.chip ? (\n                          <VChip\n                            key=\"chip\"\n                            closable={ props.closableChips }\n                            size=\"small\"\n                            text={ item.title }\n                            disabled={ item.props.disabled }\n                            { ...slotProps }\n                          />\n                        ) : (\n                          <VDefaultsProvider\n                            key=\"chip-defaults\"\n                            defaults={{\n                              VChip: {\n                                closable: props.closableChips,\n                                size: 'small',\n                                text: item.title,\n                              },\n                            }}\n                          >\n                            { slotContent }\n                          </VDefaultsProvider>\n                        )\n                      ) : (\n                        slotContent ?? (\n                          <span class=\"v-select__selection-text\">\n                            { item.title }\n                            { props.multiple && (index < model.value.length - 1) && (\n                              <span class=\"v-select__selection-comma\">,</span>\n                            )}\n                          </span>\n                        )\n                      )}\n                    </div>\n                  )\n                })}\n              </>\n            ),\n            'append-inner': (...args) => (\n              <>\n                { slots['append-inner']?.(...args) }\n                { props.menuIcon ? (\n                  <VIcon\n                    class=\"v-select__menu-icon\"\n                    icon={ props.menuIcon }\n                  />\n                ) : undefined }\n              </>\n            ),\n          }}\n        </VTextField>\n      )\n    })\n\n    return forwardRefs({\n      isFocused,\n      menu,\n      select,\n    }, vTextFieldRef)\n  },\n})\n\nexport type VSelect = InstanceType<typeof VSelect>\n"],"names":["makeVTooltipProps","propsFactory","id","String","text","omit","makeVOverlayProps","closeOnBack","location","locationStrategy","eager","minWidth","offset","openOnClick","openOnHover","origin","scrim","scrollStrategy","transition","VTooltip","genericComponent","name","props","emits","value","setup","_ref","slots","isActive","useProxiedModel","scopeId","useScopeId","uid","getUid","computed","overlay","ref","split","length","activatorProps","mergeProps","useRender","overlayProps","VOverlay","filterProps","_createVNode","_mergeProps","class","style","$event","activator","default","_len","arguments","args","Array","_key","forwardRefs","_createBlock","_component_v_tooltip","$props","tooltipText","_withCtx","_component_v_btn","color","icon","variant","size","onClick","_cache","_ctx","$emit","_","type","required","__exports__","render","makeVCheckboxBtnProps","indeterminate","Boolean","indeterminateIcon","IconValue","makeVSelectionControlProps","falseIcon","trueIcon","VCheckboxBtn","model","onChange","v","controlProps","VSelectionControl","undefined","makeVMenuProps","submenu","closeDelay","closeOnContentClick","openDelay","component","VDialogTransition","VMenu","isRtl","useRtl","parent","inject","VMenuSymbol","openChildren","shallowRef","Set","async","onFocusIn","e","before","relatedTarget","after","target","nextTick","contentEl","globalTop","document","includes","contains","focusable","focusableChildren","focus","onClickOutside","closeParents","onKeydown","disabled","key","HTMLTextAreaElement","HTMLInputElement","closest","preventDefault","nextElement","getNextElement","shiftKey","el","tabIndex","activatorEl","onActivatorKeydown","stopImmediatePropagation","focusChild","setTimeout","provide","register","add","unregister","delete","persistent","isClickInsideElement","onBeforeUnmount","onDeactivated","watch","val","addEventListener","once","removeEventListener","VDefaultsProvider","ΨopenChildren","makeVVirtualScrollItemProps","renderless","makeComponentProps","VVirtualScrollItem","inheritAttrs","height","attrs","emit","resizeRef","contentRect","useResizeObserver","_Fragment","itemRef","UP","DOWN","BUFFER_PX","makeVirtualProps","itemHeight","Number","useVirtual","items","display","useDisplay","watchEffect","parseFloat","first","last","Math","ceil","parseInt","paddingTop","paddingBottom","containerRef","markerRef","markerOffset","viewportHeight","documentElement","hasInitialRender","sizes","from","offsets","updateTime","targetScrollIndex","getSize","index","updateOffsets","debounce","start","performance","now","i","max","unwatch","offsetTop","immediate","calculateVisibleItems","IN_BROWSER","window","requestAnimationFrame","scrollToIndex","handleItemResize","prevHeight","prevMinHeight","min","calculateOffset","clamp","calculateIndex","scrollTop","binaryClosest","onScopeDispose","clear","lastScrollTop","scrollVelocity","lastScrollTime","handleScroll","scrollTime","scrollDeltaT","sign","handleScrollend","oldVal","raf","cancelAnimationFrame","_calculateVisibleItems","direction","startPx","endPx","end","topOverflow","bottomOverflow","bufferOverflow","computedItems","slice","map","item","raw","deep","arr","high","low","mid","makeVVirtualScrollProps","makeDimensionProps","VVirtualScroll","vm","getCurrentInstance","dimensionStyles","useDimension","toRef","useToggleScope","handleListeners","method","passive","onMounted","getScrollParent","vnode","children","slotProps","convertToUnit","useScrolling","listRef","textFieldRef","isScrolling","scrollTimeout","onListScroll","finishScrolling","Promise","resolve","stop","onListKeydown","$el","scrollTo","top","scrollHeight","behavior","querySelectorAll","getBoundingClientRect","child","bottom","reverse","onScrollPassive","makeSelectProps","chips","closableChips","closeText","openText","hideNoData","hideSelected","listProps","Object","menu","menuIcon","menuProps","multiple","noDataText","openOnClear","itemColor","makeItemsProps","itemChildren","makeVSelectProps","makeVTextFieldProps","modelValue","role","makeTransitionProps","VSelect","focused","ue","t","useLocale","vTextFieldRef","vMenuRef","vVirtualScrollRef","_menu","get","set","transformIn","transformOut","useItems","wrapInArray","transformed","counterValue","form","useForm","selectedValues","selection","isFocused","label","keyboardLookupLastTime","keyboardLookupPrefix","displayItems","filter","some","s","valueComparator","menuDisabled","readonly","isReadonly","computedMenuProps","listEvents","onClear","onMousedownControl","checkPrintable","KEYBOARD_LOOKUP_THRESHOLD","toLowerCase","find","title","startsWith","indexOf","select","findIndex","splice","onBlur","onAfterEnter","onAfterLeave","onFocusin","onModelUpdate","matchesSelector","newVal","hasChips","chip","hasList","isDirty","textFieldProps","VTextField","placeholder","persistentPlaceholder","join","externalValue","VList","VListItem","_ref2","itemProps","prepend","_ref3","isSelected","prependAvatar","VAvatar","prependIcon","VIcon","onChipClose","stopPropagation","onMousedown","hasSlot","slotContent","ensureValidVNode","VChip","closable","_createTextVNode"],"sourceRoot":""}